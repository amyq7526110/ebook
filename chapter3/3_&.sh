#!/bin/bash


#   backgroud-loop.sh

    for i in {1..10}

    do

      echo -n "$i "
   
      sleep 1  
    done&      # 在后台执行这个循环

               # 在第二个循环之后，将在某些时候执行

  
    echo     # 这个'echo'某些时候将不会显示
	       
    for i in `seq 11  20`

    do
  
         echo -n "$i "

         sleep 1

    done

    echo     # 这个'echo'某些时候将不会显示


    
  


#   期望输出

#  1 2  3 4 5 6 7  8 9 10
#  11 12 13 14 15 16 17 18 19 20

#  然而实际的结果有可能是

#   11 12 13 14 15 16 17 18 19 20
#   [root@pc100 ebook]# 1 2 3 4 5 6 7 8 9 10

#(第 2 个'echo'没执行,为什么?)

#  也可能是

#  1234567891011121314151617181920

#(第 1 个'echo'没执行,为什么?)
   

#非常少见的执行结果,也有可能是:
       #11 12 13 1 2 3 4 5 6 7 8 9 10 14 15 16 17 18 19 20
       #前台的循环先于后台的执行
     
      
        exit 0
       
       
       
#       Nasimuddin Ansari 建议加一句 sleep 1
#       在 6 行和 14 行的 echo -n "$i"之后加
#       将看到一些乐趣


#  11 1 12 2 13 3 14 4 15 5 16 6 17 7 18 8 19 9 20 10 

#   &&   逻辑与 操作


