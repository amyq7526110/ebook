#!/bin/bash

#   注意:在 Bash 中的整型变量事实上是 32 位的,
#+  范围是 -2147483648 到 2147483647.如果超过这个范围
#+  进行算术操作,将不会得到你期望的结果(就是溢出么).
#+  在 Bash 2.05b 版本中,Bash 支持 64 位整型了.

   a=2147483646

   echo "a = $a"   #  a = 2147483646

   let "a += 1"    #  加 1 a

   echo "a = $a"   #  a = 2147483647

   let "a += 1"    #  再加 1 , 超出上限了

   echo "a = $a"   #  a = 2147483648

                   #  没有 溢出

    # Bash 并不能理解浮点运算.它把包含的小数点看作字符串.


    a=1.5

    let "b = $a + 1.3"    # 错误

    #  8_range.sh:行27: let: b = 1.5 + 1.3: 语法错误: 
    #+ 无效的算术运算符 （错误符号是 ".5 + 1.3"）

    echo "b = $b"         # b =


    #  如果真想做浮点运算的话,使用 bc(见 12.8 节),
    #  bc 可以进行浮点运算或调用数学库函数.















