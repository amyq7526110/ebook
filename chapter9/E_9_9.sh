#!/bin/bash


   echo $_    # /bin/bash

              # 只是调用/usr/bin/bash 来运行这个脚本

   du > /dev/null    # 将没有命令输出

   echo $_           #  du


   ls -al > /dev/null   # 将没有命令输出

   echo $_              # -al 最后的参数

   :

   echo $_              # :


   #  $?

   #   命令，函数或者脚本本身的退出状态 （见 Example 23-7）

   #  $$

   #     当前运行的脚本的 PID 为$$.
   #     "argument"和"parameter"这两个单词经常不加区分的使用.在这整本书中,这两个 单词的意思完全相同.(在翻译的时候就未加区分,统统翻译成参数)


   # $-

   #    传递给脚本的 falg(使用 set 命令).参考 Example 11-15.
   #    注意:这起初是 ksh 的特征,后来被引进到 Bash 中,但不幸的是,在 Bash 中它看上去也不能可靠的工作.使用它的一个可能的方法就是让这个脚本进行自我测试(查看是否是交互的).



