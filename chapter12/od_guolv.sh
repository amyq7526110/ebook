#!/bin/bash 


#  od

#  od(octal dump)过滤器, 将会把输入(或文件)转换为 
#  8 进制或者其他进制. 在你需要查看
#  或处理一些二进制数据文件或者一个不可读的系统设备文件的时候,
#  这个命令非常有用,比如/dev/urandom,或者是一个二进制数据过滤器.
#  参见 Example 9-28 和Example 12-13. 


#  hexdump
#  对二进制文件进行 16 进制, 8 进制, 10 进制, 或者 ASCII 码的查阅动作.
#  这个命令大体上与上边的 od 命令作用相同, 但是远不及 od 命令有用.

#  objdump
#  显示编译后的 2 进制文件或 2 进制可执行文件的信息,
#  以 16 进制的形式显示, 或者显示反汇编列表(使用-d 选项).

objdump -d /bin/ls

#  mcookie
#  这个命令会产生一个"magic cookie", 这是一个 128-bit (32-字符) 
#  的伪随机 16 进制数字,这个数字一般都用来作为 X server 的鉴权"签名".
#   这个命令还可以用来在脚本中作为一种生成随机数的手段, 当然这是一种
#  "小吃店"(虽然不太正统, 但是很方便)的风格

 
random000=$(mcookie)
printf "$random000\n"

 # 当然, 完成同样的目的还可以使用 md5 命令.
 # 产生关于脚本本身的 md5 checksum.
random001=`md5sum $0 | awk '{print $1}'`
printf "$random001\n"
 # 使用 'awk' 来去掉文件名.
 # mcookie 还给出了产生"唯一"文件名的另一种方法.

