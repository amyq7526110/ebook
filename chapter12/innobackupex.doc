INNOBACKUPEX（1）Percona XtraBackup INNOBACKUPEX（1）名称innobackupex - innobackupex文档innobackupex工具是一个Perl脚本，充当xtrabackup C程序的包装器。它是Oracle使用InnoDB热备份工具分发的innobackup Perl脚本的修补版本。它通过集成xtrabackup和其他功能（如文件复制和流式传输）实现更多功能，并增加了一些便利性。它允许您执行InnoDB / XtraDB表的时间点备份以及模式定义，MyISAM表和服务器的其他部分。本手册部分详细介绍了如何使用innobackupex。备份周期 - 完整备份使用innobackupex创建备份innobackupex是一个工具，它提供了使用xtrabackup与xbstream和xbcrypt等工具组合备份整个MySQL数据库实例的功能。要创建完整备份，请使用连接到服务器所需的选项调用脚本，并且只调用一个参数：存储备份的目录的路径$ innobackupex --user = DBUSER --password = DBUSERPASS / path / to / BACKUP-DIR /并检查输出的最后一行是否有确认消息：innobackupex：在目录'/ path / to / BACKUP-DIR / 2013-03-25_00-00-09'中创建的备份innobackupex：MySQL binlog position：文件名'mysql-bin.000003'，位置1946 111225 00:00：53 innobackupex：完成OK！备份将存储在此提供的路径中创建的带时间戳的目录中，/ path / to / BACKUP-DIR / 2013-03-25_00-00-09在此特定示例中。在引擎盖下innobackupex称为xtrabackup二进制文件来备份InnoDB表的所有数据（有关此过程的详细信息，请参见../xtrabackup_bin/creating_a_backup）并复制数据库中的所有表定义（.frm文件），与MyISAM相关的数据和文件，MERGE（对其他表的引用），CSV和ARCHIVE表，以及在提供的路径中创建的带时间戳的目录的触发器和数据库配置信息。为方便起见，它还将在创建的目录中创建以下文件。要考虑的其他选项--no-timestamp选项此选项告诉innobackupex不要创​​建用于存储备份的带时间戳的目录：$ innobackupex --user = DBUSER --password = DBUSERPASS / path / to / BACKUP-DIR / - no-timestamp innobackupex将创建BACKUP-DIR子目录（如果存在则失败）并将备份存储在其中。--defaults-file选项您可以使用此选项向innobackupex提供其他配置文件。唯一的限制是它必须是传递的第一个选项：$ innobackupex --defaults-file = / tmp / other-my.cnf --user = DBUSER --password = DBUSERPASS / path / to / BACKUP-DIR / Preparation使用innobackupex进行完全备份创建备份后，数据尚未准备好进行恢复。可能会有要撤消的未提交事务或要重播的日志中的事务。执行这些待处理操作将使数据文件保持一致，这是准备阶段的目的。完成此操作后，即可使用数据。要使用innobackupex准备备份，您必须使用--apply-log和备份目录的路径作为参数：$ innobackupex --apply-log / path / to / BACKUP-DIR并检查输出的最后一行对进程的确认：150806 01:01:57 InnoDB：关闭完成; 日志序号1609228 150806 01:01:57 innobackupex：完成好了！如果成功，innobackupex会执行所需的所有操作，使数据立即可用。在引擎盖下，innobackupex通过从备份目录中的backup-my.cnf文件中读取配置来启动准备过程。之后，innobackupex重放日志文件中的已提交事务（某些事务可能在备份完成时完成）并回滚未提交的事务。完成此操作后，所有信息都放在表空间（InnoDB文件）中，并重新创建日志文件。这意味着要两次调用xtrabackup --prepare。有关此过程的更多详细信息，请参见xtrabackup部分。请注意，此准备工作不适用于增量备份。如果在增量备份的基础上执行它，则无法“添加”增量。请参阅incremental_backups_innobackupex。其他需要考虑的选项--use-memory选项通过在其中使用更多内存，可以加快准备过程。它取决于系统上的可用或可用RAM，默认为100MB。通常，进程可用的内存越多，越好。进程中使用的内存量可以通过多个字节来指定：$ innobackupex --apply-log --use-memory = 4G / path / to / BACKUP-DIR使用innobackupex恢复完全备份为方便起见，innobackupex有一个--copy-back选项，它执行备份恢复到服务器的datadir $ innobackupex --copy-back / path / to / BACKUP-DIR它会将所有与数据相关的文件复制回服务器的datadir，由服务器的my.cnf配置文件确定。您应该检查输出的最后一行是否有成功消息：innobackupex：完成复制文件。111225 01:08:13 innobackupex：完成好了！注意：datadir必须为空; Percona XtraBackup innobackupex --copy-back选项不会复制现有文件，除非指定了innobackupex --force-non-empty-directories选项。另外需要注意的是，在执行恢复之前需要关闭MySQL服务器。您无法还原到正在运行的mysqld实例的datadir（导入部分备份时除外）。由于文件的属性将被保留，因此在大多数情况下，您需要更改文件 在启动数据库服务器之前对mysql的所有权，因为它们将由创建备份的用户拥有：$ chown -R mysql：mysql / var / lib / mysql还要注意所有这些操作都将在用户调用innobackupex时完成，您将需要服务器的datadir的写权限。其他类型的备份使用innobackupex进行增量备份由于并非所有信息都在每次备份之间发生变化，因此增量备份策略使用此策略来减少存储需求和备份持续时间。这可以完成，因为每个InnoDB页面都有一个日志序列号LSN，它充当整个数据库的版本号。每次修改数据库时，此数字都会递增。增量备份会复制自特定LSN以来的所有页面。将页面按各自的顺序放在一起后，应用日志将重新创建影响数据库的过程，从而在最近创建的备份时生成数据。使用innobackupex创建增量备份首先，您需要将完整备份作为BASE进行后续增量备份：$ innobackupex / data / backups这将在/ data / backups中创建带时间戳的目录。假设备份是在一个月的最后一天完成的，那么BASEDIR将是/ data / backups / 2013-03-31_23-01-18。注意：您可以使用innobackupex --no-timestamp选项覆盖此行为，并在给定目录中创建备份。如果您检查BASE-DIR中的xtrabackup-checkpoints文件，您应该看到如下内容：backup_type = full-backuped from_lsn = 0 to_lsn = 1291135要在第二天创建增量备份，请使用--incremental选项并提供BASEDIR ：$ innobackupex --incremental / data / backups --incremental-basedir = BASEDIR和另一个带时间戳的目录将在/ data / backups中创建，在本例中为/ data / backups / 2013-04-01_23-01-18，其中包含增量备份。我们称之为INCREMENTAL-DIR-1。如果您查看INCREMENTAL-DIR-1中的xtrabackup-checkpoints文件，您应该看到类似：backup_type = incremental from_lsn = 1291135 to_lsn = 1352113第二天创建另一个增量备份将是类似的，但这次前一个增量备份将是基数：$ innobackupex --incremental / data / backups --incremental- basedir = INCREMENTAL-DIR-1让步（在本例中）/ data / backups / 2013-04-02_23-01-18。为简单起见，我们将使用INCREMENTAL-DIR-2。此时，INCREMENTAL-DIR-2中的xtrabackup-checkpoints文件应包含以下内容：backup_type = incremental from_lsn = 1352113 to_lsn = 1358967如前所述，增量备份仅复制LSN大于特定值的页面。提供LSN将生成具有相同数据的目录：innobackupex --incremental / data / backups --incremental-lsn = 1291135 innobackupex --incremental / data / backups --incremental-lsn = 1358967这是一种非常有用的方法进行增量备份，因为系统中并不总是可以使用基本增量或最后增量备份。警告：此过程仅影响XtraDB或基于InnoDB的表。每次执行增量备份时，将完全复制具有不同存储引擎的其他表，例如MyISAM。使用innobackupex准备增量备份准备增量备份与完全备份略有不同。这可能是需要更多关注的阶段：·首先，每次备份时只能重放已提交的事务。这将基本完全备份与增量备份合并。·然后，必须回滚未提交的事务才能进行即用型备份。如果重放已提交的事务并在基本备份上回滚未提交的事务，则无法添加增量事务。如果以增量方式执行此操作，则无法从该时刻和其余增量添加数据。考虑到这一点，使用--redo-only选项非常简单，从基本备份开始：innobackupex --apply-log --redo-only BASE-DIR您应该看到类似于的输出：120103 22：00:12 InnoDB：关闭完成; 日志序号1291135 120103 22:00:12 innobackupex：完成OK！然后，可以通过发出以下命令将第一个增量备份应用于基本备份：innobackupex --apply-log --redo-only BASE-DIR --incremental-dir = INCREMENTAL-DIR-1您应该看到类似于上一个，但有相应的LSN：120103 22:08:43 InnoDB：关闭完成; 日志序列号1358967 120103 22:08:43 innobackupex：完成好了！如果没有设置--incremental-dir，innobackupex将使用在basedir中创建的最新子目录。此时，BASE-DIR包含直到第一次增量备份时的数据。请注意，完整数据将始终位于基本备份的目录中，因为我们将增量附加到其中。用第二个重复该过程：innobackupex --apply-log BASE-DIR --incremental-dir = INCREMENTAL-DIR-2如果“完成OK！” 消息显示，最终数据将在基本备份目录BASE-DIR中。注意：合并除最后一个之外的所有增量时，应使用--redo-only。这就是前一行不包含--redo-only选项的原因。即使在最后一步使用了--redo-only，备份仍然是一致的，但在这种情况下，服务器将执行回滚阶段。您可以使用此过程向基础添加更多增量，只要您按照备份完成的时间顺序执行此操作。如果以错误的顺序合并增量，则备份将是无用的。如果您对必须应用它们的顺序有疑问，可以在每个目录的目录中检查文件xtrabackup_checkpoints，如本节开头所示。将基础与所有增量合并后，您可以准备它以回滚未提交的事务：innobackupex --apply-log BASE-DIR现在您的备份已准备好在恢复后立即使用。该准备步骤是可选的。但是，如果在不进行准备的情况下进行恢复，数据库服务器将开始回滚未提交的事务，如果发生碰撞，它会做同样的工作。这会导致数据库服务器启动时出现延迟，如果您进行准备，则可以避免延迟。请注意，innobackupex不会创建iblog *文件，如果要创建它们，请在目录中使用xtrabackup --prepare。否则，文件将在服务器启动后创建。使用innobackupex恢复增量备份准备增量备份后，基本目录包含与完整备份相同的备份。要恢复它，您可以使用：innobackupex --copy-back BASE-DIR，您可能需要更改restor- ing_a_backup_ibk上的详细信息。使用xbstream和tar的增量流式备份可以使用xbstream流式选项执行增量流式备份。目前，备份以自定义xbstream格式打包。使用此功能也需要BASE备份。进行基本备份：innobackupex / data / backups进行本地备份：innobackupex --incremental --incremental-lsn = LSN-number --stream = xbstream ./> incremental.xbstream解包备份：xbstream -x <incremental.xbstream获取本地备份并将其流式传输到远程服务器并打开它：innobackupex --incremental --incremental-lsn = LSN-number --stream = xbstream。/ ssh user @ hostname“cat - | xbstream -x -C> / backup-dir /” 部分备份Percona XtraBackup具有部分备份功能，这意味着您只能备份某些特定的表或数据库。您备份的表必须位于单独的表空间中，这是因为在服务器上启用了innodb_file_per_table选项后创建或更改了这些表。关于部分备份只有一个注意事项：不要复制准备好的备份。应该通过导入表来恢复部分备份，而不是使用传统的--copy-back选项。虽然在某些情况下可以通过复制文件来恢复，但这可能会导致数据库在许多情况下出现不一致，并且不建议这样做。创建部分备份有三种方法可以指定将备份整个数据的哪一部分：正则表达式（--include），枚举文件中的表（--tables-file）或提供数据库列表（ - 数据库）。使用--include选项提供给它的正则表达式将与databasename.tablename形式的完全限定表名称（包括数据库名称）进行匹配。例如，$ innobackupex --include ='^ mydatabase [。] mytable'/ path / to / backup上面的命令将创建一个带时间戳的目录，其中包含innobackupex创建的常用文件，但只有与表相关的数据文件匹配。请注意，此选项将传递给xtrabackup --tables并与每个数据库的每个表进行匹配，即使它们为空，也会创建每个数据库的目录。使用--tables-file选项提供的文本文件（路径）可以包含多个表名，每行一个，格式为databasename.tablename。例如，$ echo“mydatabase.mytable”> /tmp/tables.txt $ innobackupex --tables-file = / tmp / tables.txt / path / to / backup上面的命令将创建一个带有时间戳的目录，其中包含通常的文件innobackupex创建，但仅包含与文件中指定的表相关的数据文件。此选项传递给xtrabackup --tables-file和，与--tables选项不同，只会创建所选表的数据库目录。使用--databases选项此选项接受以空格分隔的数据库列表和要备份的表 - 在databasename [.tablename]表单中 - 或者包含每行一个元素的列表的文件。例如，$ innobackupex --databases =“mydatabase.mytable mysql”/ path / to / backup上面的命令将创建一个带时间戳的目录，其中包含innobackupex创建的常用文件，但仅包含与mydatabase中mytable相关的数据文件目录和mysql目录与整个mysql数据库。准备部分备份要准备部分备份，该过程类似于恢复单个表：应用日志并使用--export选项：$ innobackupex --apply-log --export / path / to / partial / backup您可能会在输出中看到有关表格的警告存在。这是因为基于InnoDB的引擎将其数据字典存储在除.frm文件之外的表空间文件中。innobackupex将使用xtra-backup从数据字典中删除丢失的表（未在部分备份中选择的表），以避免将来出现警告或错误：111225 0:54:06 InnoDB：错误：表' mydatabase / mytablenotincludedinpartialb'InnoDB：在InnoDB数据字典中有表空间id 6，InnoDB：但是不存在具有该id或名称的表空间。它将从数据字典中删除。您还应该看到为部分备份中包含的每个表导入（.exp文件）所需的文件创建通知：指定了xtrabackup：export选项。xtrabackup：将表'employees / departments'的元数据导出到文件`.// departments.exp`（2个索引）xtrabackup：name = PRIMARY，id.low = 80，page = 3 xtrabackup：name = dept_name，id.low = 81，page = 4请注意，您可以将--export选项与--apply-log一起使用到已准备好的备份，以便创建.exp文件。最后，检查输出中的确认消息：111225 00:54:18 innobackupex：完成OK！还原部分备份应通过将部分备份中的各个表还原到服务器来完成还原。也可以通过将准备好的备份复制回“干净”的datadir来完成（在这种情况下，请确保包含mysql数据库）。可以使用以下命令创建系统数据库：$ sudo mysql_install_db --user = mysql压缩备份在进行InnoDB表的备份时，可以省略次要索引页面。这将使备份更紧凑，这样它们将占用更少的磁盘空间。这样做的缺点是备份准备过程需要更长的时间，因为需要重新创建这些二级索引。备份大小的差异取决于辅助索引的大小。例如，没有和使用--compact选项进行完全备份：#backup size without --compact 2.0G 2013-02-01_10-18-38 #backup size with --compact option 1.4G 2013-02-01_10-29 -48注意：系统表空间不支持压缩备份，因此为了正常工作，应启用innodb-file-per-table选项。此功能是在Percona XtraBackup 2.1中引入的。创建紧凑型备份要创建紧凑型备份，需要使用--compact选项启动innobackupex：$ innobackupex --compact / data / backups这将在/ data / backups中创建一个带时间戳的目录。注意：您可以使用innobackupex --no-timestamp选项覆盖此行为，并在给定目录中创建备份。如果你检查BASE-DIR中的xtrabackup_checkpoints文件，你会看到如下内容：backup_type = full-backuped from_lsn = 0 to_lsn = 2888984349 last_lsn = 2888984349 compact = 1当--compact未使用时，compact值将为0。方式很容易检查备份是否包含辅助索引页面。准备紧凑型备份准备紧凑型还需要重建索引。为了准备备份，一个新选项--rebuild-indexes应该与--apply-logs一起使用：$ innobackupex --apply-log --rebuild-indexes / data / backups / 2013-02-01_10-29-48除了标准的innobackupex输出外，输出应包含有关正在重建的索引的信息，如：130201 10:40： 20 InnoDB：等待后台线程开始为表sbtest / sbtest1重建索引（空间id：10）找到索引k_1删除1个索引。重建1个索引。重建表sbtest / sbtest2的索引（空间id：11）找到索引k_1找到索引c找到索引k找到索引c_2删除4个索引。重建4个索引。由于Percona XtraBackup在将紧急备份应用于紧凑型完整备份时没有任何信息，关于是否会在以后应用更多增量备份，只要合并了一些增量备份的完整备份已准备好恢复，用户就需要显式请求重建索引。无条件地在每个增量备份合并上重建索引不是一种选择，因为它是一项昂贵的操作。注意：要在重建索引时并行处理各个表，可以使用innobackupex --rebuild-threads选项指定Percona XtraBackup在重新构建--apply-log --rebuild-indexes上的辅助索引时启动的线程数。每个线程一次重建单个.ibd表空间的索引。恢复紧凑型备份innobackupex有一个--copy-back选项，它执行备份恢复到服务器的datadir $ innobackupex --copy-back / path / to / BACKUP-DIR它会将所有与数据相关的文件复制回服务器的datadir，由服务器的my.cnf配置文件决定。您应该检查输出的最后一行是否有成功消息：innobackupex：完成复制文件。130201 11:08:13 innobackupex：完成好了！其他阅读·功能预览：Percona XtraBackup中的紧凑备份加密备份Percona XtraBackup实现了对加密备份的支持。它可用于使用xbstream选项加密/解密本地或流式备份（不支持流式tar备份），以便为备份添加另一层保护。使用libgcrypt库进行加密。创建加密备份要进行加密备份，需要指定以下选项（选项--encrypt-key和--encrypt-key-file是互斥的，即只需要提供其中一个）：·--encrypt = ALGORITHM - 目前支持的算法有：AES128，AES192和AES256·--encrypt-key = ENCRYPTION_KEY - 要使用的适当长度的加密密钥。如果命令行无法控制访问机器，则不建议使用此选项，因此可以将密钥视为流程信息的一部分。·--encrypt-key-file = KEYFILE - 可以读取适当长度的原始密钥的文件的名称。该文件必须是一个简单的二进制（或文本）文件，其中包含要使用的密钥。-encrypt-key选项和--encrypt-key-file选项均可用于指定加密密钥。可以使用以下命令生成加密密钥：$ openssl rand -base64 24该命令的示例输出应如下所示：建议的方法是使用以下命令创建文件：echo -n“GCHFLrD- FVx6UAsRb88uLVbAVWbK + Yzfs”> / data / backups / keyfile这两个示例都将在包含加密备份的/ data / backups中创建带时间戳的目录。注意：您可以使用innobackupex --no-timestamp选项覆盖此行为，并在给定目录中创建备份。优化加密过程加密备份引入了两个新选项，可用于加速加密过程。这些是--encrypt-threads和--encrypt-chunk-size。通过使用--encrypt-threads选项，可以指定多个线程并行使用加密。选项--encrypt-chunk-size可用于指定每个加密线程的工作加密缓冲区的大小（以字节为单位）（默认为64K）。解密加密备份可以使用xbcrypt解密备份。以下单行可用于加密整个文件夹：$ for i in find。-iname“* \。xbcrypt”`; do xbcrypt -d --encrypt-key-file = / root / secret_key --encrypt-algo = AES256 <$ i> $（dirname $ i）/ $（basename $ i .xbcrypt）&& rm $ i; 已完成Percona XtraBackup innobackupex --decrypt选项，可用于解密备份：$ innobackupex --decrypt = AES256 --encrypt-key =“ 为了清理备份目录，用户应删除* .xbcrypt文件。恢复加密备份innobackupex有一个--copy-back选项，它执行备份恢复到服务器的datadir $ innobackupex --copy-back / path / to / BACKUP-DIR它会将所有与数据相关的文件复制回服务器的datadir，由服务器的my.cnf配置文件决定。您应该检查输出的最后一行是否有成功消息：innobackupex：完成复制文件。150318 11:08:13 innobackupex：完成OK！其他阅读·Libgcrypt参考手册高级功能流媒体和压缩备份流媒体模式，由Percona XtraBackup支持，以特殊的tar或xbstream格式将备份发送到STDOUT，而不是将文件复制到备份目录。这允许您使用其他程序过滤备份的输出，从而为备份的存储提供更大的灵活性。例如，通过将输出管道连接到压缩实用程序来实现压缩。流式备份和使用Unix管道的好处之一是备份可以自动加密。要使用流功能，必须使用--stream，提供流的格式（tar或xbstream）以及存储临时文件的位置：$ innobackupex --stream = tar / tmp innobackupex启动xtrabackup in - 子进程中的日志流模式，并将其日志重定向到临时文件。然后，它使用xbstream以特殊的xbstream格式将所有数据文件流式传输到STDOUT。有关详细信息，请参阅../xbstream/xbstream。完成将所有数据文件流式传输到STDOUT后，它会停止xtrabackup并流式传输已保存的日志文件。启用压缩后，xtrabackup将使用指定的压缩算法压缩除非压缩的元文件和非InnoDB文件之外的所有输出数据。目前唯一支持的算法是quicklz。生成的文件具有qpress存档格式，即xtrabackup生成的每个* .qp文件本质上都是一个文件的qpress存档，可以通过Percona Software存储库中提供的qpress文件存档程序解压缩和解压缩。使用xbstream作为流选项，可以并行复制和压缩备份，这可以显着加快备份过程。如果备份都是压缩和加密的，则需要先解密才能进行解压缩。使用xbstream的示例将完整备份直接存储到单个文件：$ innobackupex --stream = xbstream / root / backup /> /root/backup/backup.xbstream要流式传输和压缩备份：$ innobackupex --stream = xbstream - compress / root / backup /> /root/backup/backup.xbstream将备份解压缩到/ root / backup /目录：$ xbstream -x <backup.xbstream -C / root / backup /将压缩备份发送到另一个托管并解压缩：$ innobackupex --compress --stream = xbstream / root / backup / | ssh user @ otherhost“xbstream -x -C / root / backup /”使用tar的示例将完整备份直接存储到tar存档：$ innobackupex --stream = tar / root / backup /> /root/backup/out.tar要将tar存档发送到另一台主机：$ innobackupex --stream = tar ./ | ssh user @ destination \“cat - > /data/backups/backup.tar”警告：要提取Percona XtraBackup的存档，必须使用带-i选项的tar：$ tar -xizf backup.tar.gz使用您首选的压缩工具压缩： $ innobackupex --stream = tar ./ | gzip - > backup.tar.gz $ innobackupex --stream = tar ./ | bzip2 - > backup.tar。bz2请注意，在恢复之前需要准备流式备份。流模式不准备备份。在复制环境中执行备份有一些特定于从复制从站备份的选项。--slave-info选项备份复制从属服务器时，此选项很有用。它打印二进制日志位置和主服务器的名称。它还将此信息作为CHANGE MASTER语句写入xtrabackup_slave_info文件。这对于为此主站设置新从站很有用，可以通过在此备份上启动从站服务器并发出保存在xtrabackup_slave_info文件中的语句来设置。可以在replication_howto中找到此过程的更多详细信息。--safe-slave-backup选项为了确保一致的复制状态，此选项会停止从属SQL线程并等待开始备份，直到SHOW STATUS中的Slave_open_temp_tables为零。如果没有打开的临时表，则会进行备份，否则将启动并停止SQL线程，直到没有打开的临时表为止。如果在--safe-slave-backup-timeout秒之后Slave_open_temp_tables没有变为零（默认为300秒），则备份将失败。备份完成后，将重新启动从属SQL线程。从从属服务器获取备份时，始终建议使用此选项。警告：在将其用作备份源之前，请确保您的slave是主服务器的真实副本。验证从站的一个好工具是pt-table-checksum。加速备份过程使用--parallel copy和--compress-threads加速使用xbstream选项执行本地备份或流式备份时，可以使用--paralle选项同时复制多个文件。此选项指定xtrabackup创建的用于复制数据文件的线程数。要利用此选项，必须启用多个表空间选项（innodb_file_per_table），或者必须使用innodb_data_file_path选项将共享表空间存储在多个ibdata文件中。拥有多个数据库文件（或将其分成多个文件）对性能没有可测量的影响。由于此功能是在文件级别实现的，因此，由于大量随机读取请求的重叠，并发文件传输有时会在高度分散的数据文件上进行备份时增加I / O吞吐量。您还应该考虑调整文件系统以获得最大性能（例如，检查碎片）。如果数据存储在单个文件中，则此选项无效。要使用此功能，只需将选项添加到本地备份，例如：$ innobackupex --parallel = 4 / path / to / backup通过在流式备份中使用xbstream，您还可以使用--compress-threads选项加速压缩过程。此选项指定xtrabackup为并行数据压缩创建的线程数。此选项的默认值为1.要使用此功能，只需将选项添加到本地备份，例如$ innobackupex --stream = xbstream --compress --compress-threads = 4 ./> backup.xbstream在应用日志之前，压缩文件需要解压缩。使用--rsync选项加速为了加快备份过程并最小化FLUSH TABLES WITH READ LOCK阻止写入的时间，应该使用选项innobackupex --rsync。指定此选项后，innobackupex使用rsync复制所有非InnoDB文件，而不是为每个文件生成单独的cp，对于具有大量数据库或表的服务器，这可能会快得多。innobackupex将调用rsync两次，一次在FLUSH TABLES WITH READ LOCK之前，一次调用，以最小化读锁定的时间。在第二次rsync调用期间，它只会将更改同步到非事务数据（如果有），因为第一次调用是在FLUSH TABLES WITH READ LOCK之前执行的。请注意，Percona XtraBackup将使用备份锁定作为FLUSH TABLES WITH READ LOCK的轻量级替代品。Percona Server 5.6+中提供此功能。Percona XtraBackup使用它自动复制非InnoDB数据，以避免阻止修改InnoDB表的DML查询。注意：此选项不能与innobackupex --remote-host或innobackupex --stream选项一起使用。使用innobackupex限制备份虽然innobackupex不会阻止数据库的操作，但任何备份都可以为正在备份的系统增加负载。在没有太多备用I / O容量的系统上，限制innobackupex读取和写入InnoDB数据的速率可能会有所帮助。您可以使用--throttle选项执行此操作。此选项直接传递给xtrabackup二进制文件，仅限制对InnoDB表的日志和文件的操作。它没有 t对从其他存储引擎的表读取或写入文件有影响。检查系统当前I / O操作的一种方法是使用iostat命令。有关throt-tling如何工作的详细信息，请参阅throttling_backups_xbk。注意：innobackupex --throttle选项仅在备份阶段有效，即。它不适用于innobackupex --apply-log和innobackupex --copy-back选项。--throttle选项类似于mysqlbackup中的--sleep选项，应该使用它而不是它，因为--sleep将被忽略。还原单个表在5.6之前的服务器版本中，即使使用innodb_file_per_table，也无法通过复制文件在服务器之间复制表。然而，使用Percona XtraBackup，您可以从任何InnoDB数据库导出单个表，并使用XtraDB或MySQL 5.6将它们导入Percona Server（源不必是XtraDB或MySQL 5.6，但目标确实如此）。这仅适用于单个.ibd文件，并且无法导出未包含在其自己的.ibd文件中的表。注意：如果您运行的是早于5.5.10-20.1的Percona Server版本，则应使用变量innodb_expand_import而不是innodb_import_table_from_xtrabackup。导出表导出在准备阶段完成，而不是在创建备份时完成。创建完整备份后，使用--export选项进行准备：$ innobackupex --apply-log --export / path / to / backup这将为每个InnoDB创建一个扩展名为.exp的文件。此过程的输出将包含：.. xtrabackup：指定导出选项。xtrabackup：将表'mydatabase / mytable'的元数据导出到文件`./mydatabase / mytable.exp`（1个索引）..现在你应该在目标目录中看到一个.exp文件：$ find / data / backups / mysql / -name export_test。* /data/backups/mysql/test/export_test.exp /data/backups/mysql/test/export_test.ibd /data/backups/mysql/test/export_test.cfg这三个文件都是你需要导入的该表进入运行带有XtraDB或MySQL 5.6的Percona Server的服务器。注意：MySQL使用.cfg文件，该文件包含特殊格式的InnoDB字典转储。此格式与.exp不同，后者在XtraDB中用于同一目的。严格地说，将表空间导入MySQL 5.6或Percona Server 5.6不需要.cfg文件。即使表空间来自其他服务器，也会成功导入表空间，但如果相应的.cfg文件存在于同一目录中，InnoDB将进行模式验证。每个.exp（或.cfg）文件都将用于导入该表。注意：InnoDB在--export上执行缓慢关闭（即完全清除+更改缓冲区合并），否则表空间将不一致，因此无法导入。所有常见的性能注意事项都适用：足够的缓冲池（即 - 使用内存，默认为100MB）和足够快的存储空间，否则导出完成可能需要花费大量时间。导入表要将表导入其他服务器，首先要创建一个新表，其结构与将在该服务器上导入的表相同：OTHERSERVER | mysql> CREATE TABLE mytable（...）ENGINE = InnoDB; 然后丢弃它的表空间：OTHERSERVER | mysql> ALTER TABLE mydatabase.mytable DISCARD TABLESPACE; 在此之后，将mytable.ibd和mytable.exp（或mytable.cfg，如果导入到MySQL 5.6）文件复制到数据库的主目录，并导入其表空间：OTHERSERVER | mysql> ALTER TABLE mydatabase。mytable IMPORT TABLESPACE; 执行此操作后，导入表中的数据将可用。时间点恢复可以使用innobackupex和服务器的二进制日志来恢复数据库历史记录中的特定时刻。请注意，二进制日志包含从过去的某个位修改数据库的操作。您需要一个完整的datadir作为基础，然后您可以从二进制日志中应用一系列操作，以使数据与您想要的时间点匹配。为了拍摄快照，我们将使用innobackupex进行完整备份：$ innobackupex / path / to / backup --no-timestamp（在这个例子中，为了方便起见，没有--no-timestamp选项）我们将准备它做好准备恢复：$ innobackupex --apply-log / path / to / backup有关这些过程的更多详细信息，请参阅creating_a_backup_ibk和prepare_a_backup_ibk。现在，假设时间已过，并且您希望将数据库还原到过去的某个点，请记住存在拍摄快照的点的约束。要了解服务器中二进制日志记录的情况，请执行以下查询：mysql> SHOW BINARY LOGS; + ------------------ + ----------- + | Log_name | File_size | + ------------------ + ----------- + | mysql-bin.000001 | 126 | | mysql-bin.000002 | 1306 | | mysql-bin.000003 | 126 | | MySQL的斌。000004 | 497 | + ------------------ + ----------- +和mysql> SHOW MASTER STATUS; + ------------------ + ---------- + -------------- + ---- -------------- + | 档案| 职位| Binlog_Do_DB | Binlog_Ignore_DB | + ------------------ + ---------- + -------------- + ---- -------------- + | mysql-bin.000004 | 497 | | | + ------------------ + ---------- + -------------- + ---- -------------- +第一个查询将告诉您哪些文件包含二进制日志，第二个查询将告诉您当前用于记录更改的文件以及其中的当前位置。这些文件通常存储在datadir中（除非在使用--log-bin =选项启动服务器时指定其他位置）。要查找所拍摄快照的位置，请参阅备份目录中的xtrabackup_bin-log_info：$ cat / path / to / backup / xtrabackup_binlog_info mysql-bin.000003 57这将告诉您备份时使用的文件二进制日志及其位置。当您恢复备份时，该位置将是有效的：$ innobackupex --copy-back / path / to / backup由于恢复不会影响二进制日志文件（您可能需要调整文件权限，请参阅restoring_a_backup_ibk），下一步是从快照的位置开始使用mysqlbinlog从二进制日志中提取查询，并将其重定向到文件$ mysqlbinlog / path / to / datadir / mysql-bin。000003 /path/to/datadir/mysql-bin.000004 \ --start-position = 57> mybinlog.sql请注意，如果您有多个二进制日志文件，如示例所示，则必须使用一个文件提取查询过程，如上所示。使用查询检查文件以确定哪个位置或日期对应于所需的时间点。确定后，将其传送到服务器。假设该点是11-12-25 01:00:00：$ mysqlbinlog /path/to/datadir/mysql-bin.000003 /path/to/datadir/mysql-bin.000004 \ --start-position = 57 - -stop-datetime =“11-12-25 01:00:00”| mysql -u root -p和数据库将前滚到该Point-In-Time。使用READ LOCK处理改进FLUSH表格进行备份时，在备份非InnoDB文件之前，正在使用具有READ LOCK的FLUSH表，以确保备份一致。即使可能存在已执行数小时的运行查询，也可以运行具有READ LOCK的FLUSH表。在这种情况下，所有内容都将被锁定在等待表刷新或等待主服务器发送事件状态。用READ LOCK杀死FLUSH表也不能解决这个问题。在这种情况下，让服务器再次正常运行的唯一方法是终止阻止它开始的长时间运行的查询。这意味着如果有长时间运行的查询，FLUSH TABLES WITH READ LOCK可能会卡住，使服务器处于只读模式，直到等待这些查询完成为止。注意：使用备份锁时，本节中描述的所有内容均无效。Percona XtraBackup将使用备份锁定作为FLUSH TABLES WITH READ LOCK的轻量级替代品。Percona Server 5.6+中提供此功能。Percona XtraBackup自动使用它来复制非InnoDB数据，以避免阻止修改InnoDB表的DML查询。为了防止这种情况发生，已经实现了两件事：·innobackupex可以等待好时机发出全局锁定。·innobackupex可以终止所有或仅查询阻止获取全局锁的SELECT查询等待查询完成发布全局锁的好时刻是没有长查询运行的时刻。但是等待一段时间在长时间内发出全局锁定并不总是好方法，因为它可以延长备份所需的时间。为防止innobacku-pex等待发出FLACKH TABLES WITH READ LOCK太长时间，已经实现了新选项：innobackupex --ftwrl-wait-timeout选项可用于限制等待时间。如果在此期间没有发生锁定的好时机，innobackupex将放弃并退出并显示错误消息，并且不会进行备份。此选项的零值将关闭该功能（默认设置）。另一种可能性是指定要等待的查询类型。在这种情况下，innobackupex --ftwrl-wait-query-type。可能的值都是并且更新。当全部使用时，innobackupex将等待所有长时间运行的查询（执行时间超过innobackupex --ftwrl-wait-threshold所允许的时间）完成，然后运行FLUSH TABLES WITH READ LOCK。使用更新时，innobackupex将等待UPDATE / ALTER / REPLACE / INSERT查询完成。虽然很难预测特定查询完成所需的时间，但我们可以假设已经运行了很长时间的查询很可能不会很快完成，并且很快就会完成短时间运行的查询。innobackupex可以使用innobackupex --ftwrl-wait-threshold选项的值来指定长时间运行的查询，并且可能会暂时阻止全局锁定。要使用此选项，xtrabackup用户应具有PROCESS和SUPER权限。杀死阻塞查询第二个选项是终止所有阻止获取全局锁定的查询。在这种情况下，所有运行时间超过FLUSH TABLES WITH READ LOCK的查询都是可能的阻止程序。虽然可以终止所有查询，但可以为短时间运行的查询指定额外的时间来完成。这可以通过innobackupex --kill-long-queries-timeout选项指定。此选项指定查询完成的时间，在达到该值后，将终止所有正在运行的查询。默认值为零，这将关闭此功能。innobackupex --kill-long-query-type选项可用于指定阻止获取全局锁定的所有或仅SELECT查询。要使用此选项，xtrabackup用户应具有PROCESS和SUPER权限。选项摘要·--ftwrl-wait-timeout = N（秒） - 等待好时机的时间。默认值为0，不等待。·--ftwrl-wait-query-type = {all | update} - 在运行FLUSH TABLES WITH READ LOCK之前应该完成哪些长查询。默认是全部。·--ftwrl-wait-threshold = N（秒） - 在我们考虑长时间运行和潜在的全局锁定阻止之前，查询应该运行多长时间。·--kill-long-queries-timeout = N（秒） - 在开始杀死之前发出FLUSH TABLES WITH READ LOCK之后我们给查询完成的时间。默认为0，不杀。·--kill-long-query-type = {all | select} - 一旦kill-long-queries-timeout过期，应该杀死哪些查询。示例使用以下选项运行innobackupex：$ innobackupex --ftwrl-wait-threshold = 40 --ftwrl-wait-query-type = all --ftwrl-wait-timeout = 180 --kill-long-queries-timeout = 20 --kill-long-query- type = all / data / backups /将导致innobackupex花费不超过3分钟等待超过40秒的所有查询完成。发出带有READ LOCK的FLUSH TABLES后，innobackupex将等待20秒以获取锁定。如果在20秒后仍未获取锁定，则它将终止所有运行时间超过FLUSH TABLES WITH READ LOCK的查询。在服务器上存储备份历史记录Percona XtraBackup支持在服务器上存储备份历史记录。此功能在Percona XtraBackup 2.2中实现。实施在服务器上存储备份历史记录是为了向用户提供有关正在进行的备份的其他信息。备份历史记录信息将存储在PERCONA_SCHEMA.XTRABACKUP_HISTORY表中。要使用此功能，已经实现了三个新的innobackupex选项：·innobackupex --history =：此选项启用历史记录功能，并允许用户指定将放置在历史记录中的备份系列名称。·innobackupex --incremental-history-name =：此选项允许根据名称的特定历史记录系列进行增量备份。innobackupex将搜索历史表，查找系列中最新的（最高的to_lsn）备份，并使用to_lsn值作为它的起始lsn。这与innobackupex相互排斥--incremental-history-uuid，innobackupex --incremen- tal-basedir和innobackupex --incremental-lsn options。如果找不到有效的LSN（没有该名称的系列），innobackupex将返回错误。·innobackupex --incremental-history-uuid =：允许根据UUID标识的特定历史记录进行增量备份。innobackupex将搜索历史表，查找与UUID匹配的记录，并将to_lsn值用作它的起始LSN。这个选项与innobackupex --incremental-basedir，innobackupex --incremental-lsn和innobacku-pex --incremental-history-name选项互斥。如果找不到有效的LSN（该UUID没有记录或缺少to_lsn），innobackupex将返回错误。注意：备份' 当前正在执行的s将不存在于生成的备份集中的xtra-backup_history表中，因为在备份完成之前，记录将不会添加到该表中。如果要在发生某些灾难性事件时访问备份集之外的备份历史记录，则需要在innobackupex完成后在历史记录表上执行mysqldump，部分备份或SELECT *，并将结果与​​备份集一起存储。权限执行备份的用户需要具有以下权限：·CREATE权限，以便创建PERCONA_SCHEMA.xtrabackup_history数据库和表。·INSERT权限，以便将历史记录添加到PERCONA_SCHEMA.xtrabackup_history表中。·SELECT权限，以便使用innobackupex --incremental-hisory-name或innobackupex-incremental-history-uuid，以便该功能在PERCONA_SCHEMA.xtrabackup_history表中查找innodb_to_lsn值。PERCONA_SCHEMA.XTRABACKUP_HISTORY表此表包含有关以前的服务器备份的信息。只有在使用innobackupex --history选项进行备份时，才会写入有关备份的信息。┌──────────────────────────────────────────────────────────────────────────────────────────────────────────名称│描述│├────────────────────────────────────────────────────────────────── ─┤│uuid│独特的备份ID│├───────────────────────────────────────────────────────────────────────────────────────────── ─────────│用户提供的│││备份系列的名称。可能有│││多个条目与│││同名用于│││识别相关备份│││一系列。·innobackupex --incremental-history-name和innobackupex --incremen- tal-history-uuid选项必须仅在innobackupex命令行上指定，而不是在配置文件中指定才能生效。实现innobackupex如何工作从Percona XtraBackup版本2.3 innobackupex已经在C中重写并设置为xtrabackup的符号链接。innobackupex支持2.2版本的所有功能和语法，但现在已弃用，将在下一个主要版本中删除。新功能的语法不会添加到innobackupex，只会添加到xtrabackup。以下描述了innobackupex行动背后的基本原理。进行备份如果未指定模式，innobackupex将采用备份模式。默认情况下，它使用--suspend-at-end选项启动xtrabackup，并允许它复制InnoDB数据文件。当xtrabackup完成时，innobackupex会看到它创建xtrabackup_suspended_2文件并执行带有READ LOCK的FLUSH TABLES。xtrabackup将使用备份锁定作为FLUSH TABLES WITH READ LOCK的轻量级替代品。Percona Server 5.6+中提供此功能。Percona Xtra-Backup自动使用它来复制非InnoDB数据，以避免阻止修改InnoDB表的DML查询。然后它开始复制其余的文件。然后innobackupex将检查MySQL变量以确定服务器支持哪些功能。特别感兴趣的是备份锁，更改了页面位图，GTID模式，如果一切顺利，二进制文件将作为子进程启动。如果设置了选项--safe-slave-backup，innobackupex将在复制设置中等待从站，并将使用READ LOCK刷新所有表，防止所有MyISAM表写入（除非指定了选项--no-lock）。注意：锁定仅针对MyISAM和其他非InnoDB表进行，并且仅在Percona XtraBackup完成备份所有Inn-oDB / XtraDB数据和日志之后才进行。Percona XtraBackup将使用备份锁定作为FLUSH TABLES WITH READ LOCK的轻量级替代品。Percona Server 5.6+中提供此功能。Percona XtraBackup自动使用它来复制非InnoDB数据，以避免阻止修改InnoDB表的DML查询。完成此操作后，将开始备份文件。它将备份.frm，.MRG，.MYD，.MYI，.TRG，.TRN，.ARM，.ARZ，.CSM，.CSV，.par和.opt文件。备份所有文件后，它将恢复ibbackup并等待完成备份完成后完成的事务复制。然后，表被解锁，从站启动（如果使用了选项--safe-slave-backup）并且关闭了与服务器的连接。然后，它删除xtrabackup_suspended_2文件并允许xtrabackup退出。它还将在备份目录中创建以下文件：xtrabackup_checkpoints包含LSN和备份类型; xtrabackup_binlog_info包含备份时二进制日志的位置; xtrabackup_binlog_pos_innodb包含相对于InnoDB事务的备份时二进制日志的位置; xtrabackup_slave_info包含通过SHOW SLAVE STATUS在复制设置中主服务器的MySQL binlog位置，如果传递了--slave-info选项; backup-my.cnf仅包含备份所需的my.cnf选项。例如，innodb_data_file_path，innodb_log_files_in_group，inn- odb_log_file_size，innodb_fast_checksum，innodb_page_size，inn- odb_log_block_size; xtrabackup_binary包含用于备份的二进制文件; mysql-stderr在进程中包含mysqld的STDERR，mysql-stdout包含服务器的STDOUT。最后，二进制日志位置将打印到STDERR，如果一切正常，innobackupex将退出返回0。请注意，innobackupex的STDERR不会写入任何文件。您必须将其重定向到文件，例如innobackupex OPTIONS 2> back-upout.log。还原备份要使用innobackupex还原备份，必须使用--copy-back选项。innobackupex将从my.cnf读取变量datadir，inn- odb_data_home_dir，innodb_data_file_path，innodb_log_group_home_dir并检查目录是否存在。它将首先复制MyISAM表，索引等（.frm，.MRG，.MYD，.MYI，.TRG，.TRN，.ARM，.ARZ，.CSM，.CSV，par和.opt文件），接下来是InnoDB表和索引，最后是日志文件。它将在复制时保留文件的属性，您可能必须在启动数据库服务器之前将文件的所有权更改为mysql，因为它们将由创建备份的用户拥有。或者， - move-back选项可用于恢复备份。此选项类似于--copy-back，唯一的区别是它不是复制文件而是将它们移动到目标位置。由于此选项会删除备份文件，因此必须谨慎使用。当没有足够的可用磁盘空间来容纳数据文件及其备份副本时，它非常有用。参考资料innobackupex选项参考此页面记录了innobacku- pex的所有命令行选项。选项--apply-log通过应用位于同一目录中的名为xtrabackup_logfile的事务日志文件，在BACKUP-DIR中准备备份。此外，创建新的事务日志。InnoDB配置从innobackupex在备份时创建的文件backup-my.cnf中读取。innobackupex --apply-log默认使用来自backup-my.cnf的InnoDB配置，或者使用--defaults-file（如果已指定）。在这CON组文本InnoDB的配置是指影响数据格式的服务器变量，即快捷酒店odb_page_size，innodb_log_block_size等位置相关的变量，如innodb_log_group_home_dir或快捷酒店odb_data_file_path总是被忽略--apply日志，所以prepar- ING一个备份始终使用备份目录中的数据文件，而不是任何外部数据文件。--backup-locks此选项控制是否应在备份阶段使用备份锁而不是FLUSH TABLES WITH READ LOCK。如果服务器不支持备份锁，则该选项无效。默认情况下启用此选项，使用--no-backup-locks禁用。--close-files不要保持文件打开。此选项直接传递给xtrabackup。当xtrabackup打开表空间时，它通常不会关闭其文件句柄，以便正确处理DDL操作。但是，如果表空间的数量非常大且无法满足任何限制，则可以选择在不再访问文件句柄时关闭它们。Percona XtraBackup可以在启用此选项的情况下生成不一致的备份。使用风险由您自己承担。--compact创建一个紧凑的备份，省略所有二级索引页。此选项直接传递给xtrabackup。有关详细信息，请参阅xtra-备份文档。--compress此选项指示xtrabackup压缩InnoDB数据文件的备份副本。它直接传递给xtrabackup子进程。有关详细信息，请参阅xtrabackup文档。--compress-threads =＃此选项指定将用于并行压缩的工作线程数。它直接传递给xtrabackup子进程。有关详细信息，请参阅xtrabackup文档。--compress-chunk-size =＃此选项指定每个压缩线程的内部工作缓冲区的大小，以字节为单位。它直接传递给xtrabackup子进程。默认值为64K。有关详细信息，请参阅xtrabackup文档。--copy-back将先前制作的备份中的所有文件从备份目录复制到其原始位置。Percona XtraBackup innobackupex --copy-back选项不会复制现有文件，除非指定了innobackupex --force-non-empty-directories选项。--databases = LIST此选项指定innobackupex应备份的数据库列表。该选项接受包含要备份的数据库列表的字符串参数或文件路径。该列表的格式为“databasename1 [.table_name1] databasename2 [.ta-ble_name2] ...”。如果未指定此选项，将备份包含MyISAM和InnoDB表的所有数据库。请确保--databases包含所有InnoDB数据库和表，以便还备份所有innodb.frm文件。如果列表很长，可以在文件中指定，并且可以指定文件的完整路径而不是列表。（请参阅选项--tables-file。） - decompress在以前使用--compress选项创建的备份中解压缩扩展名为.qp的所有文件。innobackupex --paral-lel选项允许同时解密和/或解压缩多个文件。为了减压，必须在路径中安装和访问qpress实用程序。Percona XtraBackup不会自动删除压缩文件。为了清理备份目录，用户应手动删除* .qp文件。--decrypt = ENCRYPTION-ALGORITHM在先前使用--encrypt选项制作的备份中解密所有带.xbcrypt扩展名的文件。innobackupex --parallel选项允许同时解密和/或解压缩多个文件。--defaults-file = [MY.CNF]此选项接受一个字符串参数，该参数指定要从中读取默认MySQL选项的文件。必须作为命令行中的第一个选项。--defaults-extra-file = [MY.CNF]此选项指定从标准默认文件之前读取默认MySQL选项的额外文件。必须作为命令行中的第一个选项。--defaults-group = GROUP-NAME此选项接受一个字符串参数，该参数指定应从配置文件中读取的组。如果您使用mysqld_multi，则需要这样做。这也可用于指示除mysqld和xtrabackup之外的组。--encrypt = ENCRYPTION_ALGORITHM此选项指示xtrabackup使用ENCRYP-TION_ALGORITHM中指定的算法加密InnoDB数据文件的备份副本。它直接传递给xtrabackup子进程。有关更多详细信息，请参阅xtrabackup文档。--encrypt-key = ENCRYPTION_KEY此选项指示xtrabackup在使用--encrypt选项时使用给定的ENCRYPTION_KEY。它直接传递给xtrabackup子进程。有关更多详细信息，请参阅xtrabackup文档。--encrypt-key-file = ENCRYPTION_KEY_FILE使用--encrypt选项时，此选项指示xtrabackup使用存储在给定ENCRYPTION_KEY_FILE中的加密密钥。它直接传递给xtrabackup子进程。有关更多详细信息，请参阅xtrabackup文档。--encrypt-threads =＃此选项指定将用于并行加密的工作线程数。它直接传递给xtra-backup子进程。有关更多详细信息，请参阅xtrabackup文档。--encrypt-chunk-size =＃此选项指定每个加密线程的内部工作缓冲区的大小（以字节为单位）。它直接传递给xtrabackup子进程。有关更多详细信息，请参阅xtrabackup文档。--export此选项直接传递给xtrabackup --export选项。它允许导出单个表以导入到另一个服务器。有关详细信息，请参阅xtrabackup文档。--extra-lsndir = DIRECTORY此选项接受一个字符串参数，该参数指定保存xtrabackup_check- points文件的额外副本的目录。它直接传递给xtrabackup的--extra-lsndir选项。有关详细信息，请参阅xtrabackup文档。--force-non-empty-directories当指定时，它使innobackupex --copy-back选项或innobackupex --move-back选项将文件传输到非空目录。不会覆盖现有文件。如果--copy-back或--move-back必须从目标目录中已存在的备份目录中复制文件，它仍将失败并显示错误。--galera-info此选项创建xtrabackup_galera_info文件，该文件包含备份时的本地节点状态。执行Percona-XtraDB-Cluster备份时应使用选项。使用备份锁创建备份时无效。--help此选项显示帮助屏幕并退出。--history = NAME此选项可以在PER-CONA_SCHEMA.xtrabackup_history表中跟踪备份历史记录。可以指定可选的历史记录系列名称，该名称将与正在进行的当前备份的历史记录一起放置。--host = HOST此选项接受一个字符串参数，该参数指定在使用TCP / IP连接到数据库服务器时要使用的主机。它被传递给mysql子进程而不做任何改动。有关详细信息，请参阅mysql --help。--ibbackup = IBBACKUP-BINARY此选项指定应使用哪个xtrabackup二进制文件。该选项接受字符串参数。IBBACKUP-BINARY应该是用于运行Percona XtraBackup的命令。如果xtrabackup二进制文件不在您的搜索路径或工作目录中，该选项可能很有用。如果未指定此选项，innobackupex将尝试确定要自动使用的二进制文件。--include = REGEXP此选项是与databasename.tablename格式的表名匹配的正则表达式。它直接传递给xtrabackup的xtrabackup --tables选项。有关详细信息，请参阅xtrabackup文档。--incremental此选项告诉xtrabackup创建增量备份，而不是完整备份。它被传递给xtrabackup子进程。指定此选项时，也可以给出--incremental-lsn或--incremental-basedir。如果两个选项都没有给出，则默认情况下将选项--incremental-basedir传递给xtrabackup，设置为备份基目录中的第一个带时间戳的备份目录。--incremental-basedir = DIRECTORY此选项接受一个字符串参数，该参数指定包含完整备份的目录，该备份是增量备份的基础数据集。它与--incremental选项一起使用。--incremental-dir = DIRECTORY此选项接受一个字符串参数，该参数指定增量备份将与完整备份组合以进行新的完整备份的目录。它与--incremental选项一起使用。--incremental-history-name = NAME此选项指定存储在PERCONA_SCHEMA.xtrabackup_history历史记录中的备份系列的名称，以基于增量备份。Percona Xtrabackup将搜索历史表，寻找系列中最新的（最高innodb_to_lsn）成功备份，并将to_lsn值用作增量备份的起始lsn。这与innobackupex相互排斥--incremental-hisory-uuid，：option：innobackupex --incremental-basedir和innobackupex --incremental-lsn。如果找不到有效的lsn（没有该名称的系列，没有该名称的成功备份）xtra- backup将返回错误。它与innobackupex --incremental选项一起使用。--incremental-history-uuid = UUID此选项指定存储在PERCONA_SCHEMA.xtrabackup_history中的特定历史记录的UUID，以作为增量备份的基础。innobackupex --incremental-hisory-name，：optionL`innobackupex --incremental-basedir`和innobackupex --incremental-lsn。如果找不到有效的lsn（没有该uuid的成功记录）xtrabackup将返回错误。它与innobackupex --incremental选项一起使用。--incremental-lsn = LSN此选项接受一个字符串参数，该参数指定用于增量备份的日志序列号（LSN）。它与--incremental选项一起使用。它被用来代替指定--incremental-basedir。对于由MySQL和Percona Server 5.0系列版本创建的数据库，请以高：低格式指定两个32位整数。对于在5.1及更高版本中创建的数据库，请将LSN指定为单个64位整数。--kill-long-queries-timeout = SECONDS此选项指定innobackupex在启动FLUSH TABLES与READ LOCK之间等待的秒数，并终止那些阻止它的查询。默认值为0秒，这意味着innobackupex不会尝试终止任何查询。要使用此选项，xtrabackup用户应具有PROCESS和SUPER权限。支持的地方（Percona Server 5。6+）xtrabackup将自动使用备份锁作为FLUSH TABLES WITH READ LOCK的轻量级替代品来复制非InnoDB数据，以避免阻止修改InnoDB表的DML查询。--kill-long-query-type = all | select此选项指定应该杀死哪些类型的查询以取消阻止全局锁定。默认为“全部”。--ftwrl-wait-timeout = SECONDS此选项指定innobackupex在运行之前应等待阻止FLUSH TABLES WITH READ LOCK的查询的时间（以秒为单位）。如果超时到期时仍有此类查询，则innobackupex将终止并显示错误。默认值为0，在这种情况下，innobackupex不会等待查询完成并立即启动FLUSH TABLES WITH READ LOCK。支持的位置（Percona Server 5.6+）xtrabackup将自动使用备份锁作为FLUSH TABLES WITH READ LOCK的轻量级替代方案来复制非InnoDB数据，以避免阻止修改InnoDB表的DML查询。--ftwrl-wait-threshold = SECONDS此选项指定查询运行时阈值，innobackupex使用该阈值来检测具有非零值innobackupex --ftwrl-wait-timeout的长时间运行的查询。在存在长时间运行的查询之前，不会启动具有READ LOCK的FLUSH表。如果--ftwrl-wait-timeout为0，则此选项无效。默认值为60秒。支持的地方（Percona Server 5.6+）xtra- backup将自动使用Backup Locks作为FLUSH TABLES WITH READ LOCK的轻量级替代品来复制非InnoDB数据，以避免阻止修改InnoDB表的DML查询。--ftwrl-wait-query-type = all | update此选项指定在innobackupex发出全局锁之前允许完成哪些类型的查询。默认是全部。--log-copy-interval =＃此选项指定日志复制线程完成的检查之间的时间间隔（以毫秒为单位）。--move-back将先前制作的备份中的所有文件从备份目录移动到其原始位置。由于此选项会删除备份文件，因此必须谨慎使用。--no-lock使用此选项可以使用FLUSH TABLES WITH READ LOCK禁用表锁定。仅当所有表都是InnoDB并且您不关心备份的二进制日志位置时才使用它。如果正在执行任何DDL语句或者在非InnoDB表上发生任何更新（这包括mysql数据库中的系统MyISAM表），则不应使用此选项，否则可能导致备份不一致。支持的地方（Percona Server 5。6+）xtrabackup将自动使用备份锁作为FLUSH TABLES WITH READ LOCK的轻量级替代品来复制非InnoDB数据，以避免阻止修改InnoDB表的DML查询。如果您正在考虑使用--no-lock，因为备份无法获取锁定，这可能是因为传入的复制事件阻止了锁定成功。请尝试使用--safe-slave-backup暂时停止复制从属线程，这可能有助于备份成功，然后您无需使用此选项。使用--no-lock选项时不会创建xtrabackup_binlog_info（因为SHOW MASTER STATUS可能不一致），但在某些条件下，可以使用xtrabackup_bin-log_pos_innodb来获取一致的binlog坐标，如working_with_binlogs中所述。--no-timestamp此选项可防止在命令行上创建BACKUP-ROOT-DIR的带时间戳子目录。指定后，备份将在BACKUP-ROOT-DIR中完成。--no-version-check此选项禁用由--version-check选项启用的版本检查。--parallel = NUM​​BER-OF-THREADS此选项接受一个整数参数，该参数指定xtrabackup子进程用于同时备份文件的线程数。请注意，此选项适用于文件级别，即，如果您有多个.ibd文件，则它们将并行复制。如果您的表一起存储在单个表空间文件中，它将无效。此选项将允许同时解密和/或解压缩多个文件。为了解压缩，必须在路径中安装和访问qpress实用程序。此过程将删除原始压缩/加密文件，并将结果保留在同一位置。它直接传递给xtra-backup的xtrabackup --parallel选项。有关详细信息，请参阅xtrabackup文档--password = PASSWORD此选项接受一个字符串参数，该参数指定连接到数据库时要使用的密码。它被传递给mysql子进程而不做任何改动。有关详细信息，请参阅mysql --help。--port = PORT此选项接受一个字符串参数，该参数指定使用TCP / IP连接到数据库服务器时要使用的端口。它被传递给mysql子进程。它被传递给mysql子进程而不做任何改动。有关详细信息，请参阅mysql --help。--rebuild-indexes此选项仅在与--apply-log选项一起使用时才有效，并直接传递给xtrabackup。使用时，使xtrabackup在应用日志后重建所有二级索引。此选项通常用于准备紧凑的备份。有关更多信息，请参阅xtrabackup文档。--rebuild-threads = NUM​​BER-OF-THREADS此选项仅在与--apply-log和--rebuild-indexes选项一起使用时才有效，并直接传递给xtrabackup。使用时，在重建索引时，xtrabackup与指定数量的线程并行处理表空间。有关更多信息，请参阅xtrabackup文档。--redo-only在准备基本完全备份和合并除最后一个之外的所有增量备份时，应使用此选项。它直接传递给xtrabackup的xtrabackup --apply-log-only选项。这迫使xtrabackup跳过“回滚”阶段并仅执行“重做”。如果备份稍后将对其应用增量更改，则必须执行此操作。有关详细信息，请参阅xtrabackup文档。--rsync使用rsync实用程序优化本地文件传输。指定此选项后，innobackupex使用rsync复制所有非InnoDB文件，而不是为每个文件生成单独的cp，对于具有大量数据库或表的服务器，这可能会快得多。此选项不能与--stream一起使用。--safe-slave-backup指定后，innobackupex将在运行FLUSH TABLES WITH READ LOCK之前停止从属SQL线程，并等待开始备份，直到SHOW STATUS中的Slave_open_temp_tables为零。如果没有打开的临时表，则会进行备份，否则将启动并停止SQL线程，直到没有打开的临时表为止。如果在innobackupex --safe-slave-backup-timeout秒之后Slave_open_temp_tables没有变为零，则备份将失败。备份完成后，将重新启动从属SQL线程。--safe-slave-backup-timeout = SECONDS innobackupex --safe-slave-backup应等待Slave_open_temp_tables变为零的秒数。默认为300秒。--scpopt = SCP-OPTIONS此选项接受一个字符串参数，该参数指定在指定选项--remost-host时传递给scp的命令行选项。如果未指定该选项，则默认选项为-Cp -c arcfour。--slave-info备份复制从属服务器时，此选项很有用。它打印二进制日志位置和主服务器的名称。它还将此信息作为CHANGE MASTER命令写入xtra- backup_slave_info文件。可以通过在此备份上启动从属服务器并发出CHANGE MASTER命令并将二进制日志位置保存在xtrabackup_slave_info文件中来设置此主站的新从站。--socket此选项接受一个字符串参数，该参数指定在使用UNIX域套接字连接到本地数据库服务器时要使用的套接字。它被传递给mysql子进程而不做任何改动。有关详细信息，请参阅mysql --help。--sshopt = SSH-OPTIONS此选项接受一个字符串参数，该参数指定在指定选项--remost-host时传递给ssh的命令行选项。--stream = STREAMNAME此选项接受一个字符串参数，该参数指定进行流式备份的格式。备份将以指定格式对STDOUT进行。目前，支持的格式是tar和xbstream。使用xbstream，它在Percona XtraBackup发行版中可用。如果在此选项后指定路径，它将被解释为tmpdir的值--tables-file = FILE此选项接受一个字符串参数，该参数指定其中有一个表单database.table的名称列表的文件，每行一个。该选项直接传递给xtrabackup的--tables-file选项。--throttle = IOS此选项接受一个整数参数，该参数指定每秒的I / O操作数（即读取和写入对）。它直接传递给xtrabackup的xtrabackup --throttle选项。注意：此选项仅在备份阶段有效，即。它不适用于innobackupex --apply-log和innobackupex --copy-back选项。--tmpdir = DIRECTORY此选项接受一个字符串参数，该参数指定将存储临时文件的位置。指定--stream时可以使用它。对于这些选项，在流式传输或复制到远程主机之前，事务日志将首先存储到临时文件中。此选项指定临时文件的存储位置。如果未指定该选项，则默认使用从服务器配置读取的tmpdir值。innobackupex将my.cnf中指定的tmpdir值作为--target-dir选项传递给xtrabackup二进制文件。[mysqld]和[xtrabackup]组都是从my.cnf中读取的。如果两者都有tmpdir，那么使用的值取决于my.cnf中这些组的顺序。--use-memory =＃此选项接受一个字符串参数，该参数指定xtrabackup在准备备份时用于崩溃恢复的内存量（以字节为单位）。支持倍数提供单位（例如1MB，1M，1GB，1G）。它仅与选项--apply-log一起使用。它直接传递给xtrabackup的xtrabackup --use-memory选项。有关详细信息，请参阅xtrabackup文档。--user = USER此选项接受一个字符串参数，该参数指定用户（即连接到服务器时使用的MySQL用户名）登录，如果那不是当前用户。它被传递给mysql子进程而不做任何改动。有关详细信息，请参阅mysql --help。--version此选项显示innobackupex版本和版权声明，然后退出。--version-check指定此选项后，innobackupex将在创建服务器连接后对备份阶段的服务器执行版本检查。作者Percona LLC和/或其附属公司COPYRIGHT 2009-2017，Percona LLC和/或其附属公司2.4.6 Apr 17,2017 INNOBACKUPEX（1）--version此选项显示innobackupex版本和版权声明，然后退出。--version-check指定此选项后，innobackupex将在创建服务器连接后对备份阶段的服务器执行版本检查。作者Percona LLC和/或其附属公司COPYRIGHT 2009-2017，Percona LLC和/或其附属公司2.4.6 Apr 17,2017 INNOBACKUPEX（1）--version此选项显示innobackupex版本和版权声明，然后退出。--version-check指定此选项后，innobackupex将在创建服务器连接后对备份阶段的服务器执行版本检查。作者Percona LLC和/或其附属公司COPYRIGHT 2009-2017，Percona LLC和/或其附属公司2.4.6 Apr 17,2017 INNOBACKUPEX（1）innobackupex将在创建服务器连接后对备份阶段的服务器执行版本检查。作者Percona LLC和/或其附属公司COPYRIGHT 2009-2017，Percona LLC和/或其附属公司2.4.6 Apr 17,2017 INNOBACKUPEX（1）innobackupex将在创建服务器连接后对备份阶段的服务器执行版本检查。作者Percona LLC和/或其附属公司COPYRIGHT 2009-2017，Percona LLC和/或其附属公司2.4.6 Apr 17,2017 INNOBACKUPEX（1）






















XTRABACKUP（1）Percona XtraBackup XTRABACKUP（1）名称xtrabackup - Percona XtraBackup 2.4文档xtrabackup二进制文件是一个已编译的C程序，它与InnoDB库和标准MySQL客户端库链接。InnoDB库提供将日志应用于数据文件所需的功能，MySQL客户端库提供命令行选项解析，配置文件解析等，以使二进制文件具有熟悉的外观。该工具以--backup或--prepare模式运行，对应于它执行的两个主要功能。这些函数有几种变体可以完成不同的任务，并且有两种不太常用的模式--stats和--print-param。其他类型的备份增量备份xtrabackup和innobackupex工具都支持增量备份，这意味着它只能复制自上次完全备份以来已更改的数据。您可以在每个完整备份之间执行许多增量备份，因此您可以设置备份过程，例如每周一次完整备份和每天增量备份，或每天完整备份和每小时增量备份。增量备份的工作原理是每个InnoDB页面（通常大小为16kb）包含日志序列号或LSN。LSN是整个数据库的系统版本号。每个页面的LSN显示它最近的更改。增量备份会复制其LSN比先前的增量备份或完整备份的LSN更新的每个页面。有两种算法用于查找要复制的此类页面集。第一个可用于所有服务器类型和版本的是通过读取所有数据页来直接检查页面LSN。Percona Server提供的第二个功能是在服务器上启用更改的页面跟踪功能，该功能将在更改页面时记录这些功能。然后，该信息将在紧凑的单独的所谓位图文件中写出。xtrabackup二进制文件将使用该文件仅读取增量备份所需的数据页，从而可能节省许多读取请求。如果xtrabackup二进制文件找到位图文件，则默认启用后一种算法。即使位图数据可用，也可以指定--incremental-force-scan来读取所有页面。增量备份实际上并不将数据文件与先前备份的数据文件进行比较。事实上，如果你知道它的LSN，你可以使用--incremental-lsn来执行增量备份而不需要先前的备份。增量备份只需读取页面并将其LSN与最后一个备份的LSN进行比较。但是，您仍需要完整备份来恢复增量更改; 如果没有完整备份作为基础，增量备份将毫无用处。创建增量备份要进行增量备份，像往常一样以完整备份开始。xtrabackup二进制文件将名为xtrabackup_checkpoints的文件写入备份的目标目录。该文件包含一行显示to_lsn，它是备份结束时数据库的LSN。使用如下命令创建完整备份：xtrabackup --backup --target-dir = / data / backups / base --dadadir = / var / lib / mysql /如果您想要可用的完整备份，请使用innobackupex xtrabackup本身不会复制表定义，触发器或其他任何不是.ibd的东西。如果查看xtrabackup_checkpoints文件，您应该看到类似于以下内容的一些内容：backup_type = full-backuped from_lsn = 0 to_lsn = 1291135现在您已拥有完整备份，您可以根据它进行增量备份。使用如下命令：xtrabackup --backup --target-dir = / data / backups / inc1 \ --incremental-basedir = / data / backups / base --datadir = / var / lib / mysql / The / data / backups / inc1 /目录现在应该包含delta文件，例如ibdata1.delta和test / table1.ibd.delta。这些代表自LSN 1291135以来的更改。如果检查此目录中的xtrabackup_checkpoints文件，您应该看到类似于以下内容的内容：backup_type = incremental from_lsn = 1291135 to_lsn = 1291340含义应该是不言而喻的。它' 现在可以使用此目录作为另一个增量备份的基础：xtrabackup --backup --target-dir = / data / backups / inc2 \ --incremental-basedir = / data / backups / inc1 --datadir = / var / lib / mysql /准备增量备份增量备份的--prepare步骤与正常备份不同。在正常备份中，执行两种类型的操作以使数据库保持一致：从日志文件中对数据文件重放已提交的事务，并回滚未提交的事务。在准备备份时，您必须跳过未提交事务的回滚，因为备份时未提交的事务可能正在进行中，并且它' 很可能它们将在下一次增量备份中提交。您应该使用--apply-log-only选项来阻止回滚阶段。如果不使用--apply-log-only选项来阻止回滚阶段，那么增量备份将毫无用处。在回滚事务后，无法应用进一步的增量备份。从您创建的完整备份开始，您可以准备它，然后将增量差异应用于它。回想一下，您有以下备份：/ data / backups / base / data / backups / inc1 / data / backups / inc2要准备基本备份，您需要像往常一样运行--prepare，但要阻止回滚阶段：xtrabackup --prepare --apply-log-only --target-dir = / data / backups / base输出应以一些文本结束，如下所示：101107 20:49:43 InnoDB：Shutdown completed; 日志序列号1291135日志序列号应与您之前看到的基本备份的to_lsn匹配。即使已跳过回滚阶段，此备份实际上也可以按原样恢复。如果你恢复它并启动MySQL，InnoDB将检测到没有执行回滚阶段，它将在后台执行，因为它通常用于启动时的崩溃恢复。它会通知您数据库没有正常关闭。要将第一个增量备份应用于完整备份，您应该使用以下命令：xtrabackup --prepare --apply-log-only --target -dir = / data / backups / base \ --incremental-dir = / data / backups / inc1这会将增量文件应用于/ data / backups / base中的文件，它们可以及时向前滚动到增量备份的时间。然后它像往常一样将重做日志应用于结果。最终数据位于/ data / backups / base中，而不是在增量目录中。您应该看到一些输出，如下所示：启用1291135的增量备份。xtrabackup：cd to / data / backups / base / xtrabackup：这个目标似乎已经准备好了。xtrabackup：检测到xtrabackup_logfile：size = 2097152，start_lsn =（1291340）应用/data/backups/inc1/ibdata1.delta ... 应用/data/backups/inc1/test/table1.ibd.delta ...... .... snip 101107 20:56:30 InnoDB：关闭完成; 日志序列号1291340同样，LSN应该与您在早先检查第一个增量备份时看到的相匹配。如果从/ data / backups / base还原文件，则应在第一次增量备份时看到数据库的状态。准备第二个增量备份是一个类似的过程：将增量应用于（修改的）基本备份，然后将其数据及时滚动到第二个增量备份点：xtrabackup --prepare --target-dir = / data / backups / base \ --incremental-dir = / data / backups / inc2注意：合并除最后一个以外的所有增量时，应使用--apply-log-only。这就是前一行不包含--apply-log-only选项的原因。即使在最后一步使用了--apply-log-only，备份仍然是一致的，但在这种情况下，服务器将执行回滚阶段。如果您希望避免通知InnoDB没有正常关闭，当您将所需的增量应用于基本备份时，可以再次运行--prepare而不禁用回滚阶段。部分备份xtrabackup支持在启用innodb_file_per_ta-ble选项时进行部分备份。有三种方法可以创建部分备份：将表的名称与正则表达式匹配，在文件中提供它们的列表或提供数据库列表。警告：如果在备份期间删除了任何匹配或列出的表，则xtrabackup将失败。出于本手册页的目的，我们假设有一个名为test的数据库，其中包含名为t1和t2的表。使用--tables选项第一种方法是使用--tables选项。选项的值是一个正则表达式，它与完全限定的表名（包括数据库名称）匹配，格式为databasename.tablename。要仅备份测试数据库中的表，可以使用以下命令：$ xtrabackup --backup --datadir = / var / lib / mysql --target -dir = / data / backups / \ --tables =“^测试[。]。*” 要仅备份表test.t1，您可以使用以下命令：$ xtrabackup --backup --dadadir = / var / lib / mysql --target -dir = / data / backups / \ --tables =“^ test [。] t1“使用--tables-file选项--tables-file选项指定一个文件，该文件可以包含多个表名，文件中每行一个表名。仅备份文件中指定的表。名称完全匹配，区分大小写，没有模式或正则表达式匹配。表名必须是完全限定的，格式为databasename.tablename。$ echo“mydatabase.mytable”> /tmp/tables.txt $ xtrabackup --backup --tables-file = / tmp / tables。txt使用--databases和--databases-file选项--databases选项接受以空格分隔的要备份的数据库和表的列表 - 在databasename [.tablename]表单中。--databases-file选项指定一个文件，该文件可以包含databasename [.tablename]表单中的多个数据库和表，文件中每行一个元素名称。仅备份命名的数据库和表。名称完全匹配，区分大小写，没有模式或正则表达式匹配。准备备份在部分备份上使用--prepare选项时，您将看到有关不存在的表的警告。那是因为这些表存在于InnoDB内的数据字典中，但相应的.ibd文件不在 存在。它们未被复制到备份目录中。这些表将从数据字典中删除，当您还原备份并启动InnoDB时，它们将不再存在，并且不会导致任何错误或警告打印到日志文件中。您将在准备阶段看到错误消息的示例。InnoDB：从.ibd文件中读取表空间信息... 101107 22:31:30 InnoDB：错误：表'test1 / t'InnoDB：在InnoDB数据字典中有表空间id 6，InnoDB：但是具有该id或名称的表空间不存在。它将从数据字典中删除。紧凑备份在进行InnoDB表的备份时，可以省略二级索引页。这将使备份更紧凑，这样它们将占用更少的磁盘空间。这样做的缺点是备份准备过程需要更长的时间，因为需要重新创建这些二级索引。备份大小的差异取决于辅助索引的大小。例如，没有和使用--compact选项进行完全备份：#backup size without --compact 2.0G xb_backup #backup size with --compact option 1.4G xb_compact_backup注意：系统表空间不支持压缩备份，因此在为了正常工作，应启用innodb-file-per-table选项。此功能是在Percona XtraBackup 2.1中引入的。创建紧凑型备份要进行紧凑型备份，需要使用--compact选项启动innobackupex：$ xtrabackup --backup --compact --target-dir = / data / backups这将在/ data / backups中创建一个紧凑的备份。如果你检查target-dir文件夹中的xtrabackup-checkpoints文件，你会看到如下内容：backup_type = full-backuped from_lsn = 0 to_lsn = 2888984349 last_lsn = 2888984349 compact = 1当--compact未使用时紧凑值将这样就可以很容易地检查备份是否包含辅助索引页面。准备紧凑型备份准备紧凑型还需要重建索引。为了准备备份，一个新的选项--rebuild-indexes应该与--apply-logs一起使用：$ xtrabackup --prepare --rebuild-indexes / data / backups / Output，除了标准的innobackupex输出外，应该包含有关正在重建的索引的信息，例如：[01]检查表sakila / city中是否存在要重建的索引（空间id：9）[01]找到索引idx_fk_country_id [01]重建1个索引。[01]检查表sakila / country是否存在要重建的索引（空间id：10）[01]检查表sakila / customer中是否存在要重建的索引（空间id：11）[01]找到索引idx_fk_store_id [01]找到索引idx_fk_address_id [01]找到索引idx_last_name [01]重建3个索引。此外，您可以使用--rebuild-threads选项在重建索引时处理多个线程中的表，例如：$ xtrabackup --prepare --rebuild-indexes --rebuild-threads = 16 / data / backups /在这种情况下Percona XtraBackup将创建16个工作线程，每个线程一次为一个表重建索引。它还将显示每条消息的线程ID。启动16个线程来重建索引。[09]检查表sakila / city是否有重建索引（空间id：9）[09]找到索引idx_fk_country_id [10]检查表sakila / country是否有要重建的索引（空间id：10）[11]检查表sakila / customer中是否有要重建的索引（空间id：11） [11]找到索引idx_fk_store_id [11]找到索引idx_fk_address_id [11]找到索引idx_last_name [11]重建3个索引。由于Percona XtraBackup在将增量备份应用于紧凑型完整备份时没有任何信息，因此，无论是否稍后会应用更多增量备份，只要完整备份，用户就需要明确请求重建索引。一些增量备份已合并准备好恢复。无条件地在每个增量备份合并上重建索引不是一种选择，因为它是一项昂贵的操作。还原紧凑备份xtrabackup二进制文件没有任何还原备份的功能。这取决于用户要做的事情。您可以使用rsync或cp来还原文件。您应该检查已还原的文件是否具有正确的所有权和权限。其他阅读·功能预览：Percona XtraBackup中的紧凑备份高级功能限制备份尽管xtrabackup不会阻止数据库的操作，但任何备份都可以为正在备份的系统增加负载。在没有太多备用I / O容量的系统上，限制xtrabackup读取和写入数据的速率可能会有所帮助。您可以使用--throttle选项执行此操作，此选项以1 MB为单位限制每秒的I / O操作数。下图显示了--throttle = 1时节流的工作原理。[image]在--backup模式下，此选项限制xtrabackup将执行的每秒读写操作对的数量。如果要创建增量备份，则限制是每秒读取IO操作的数量。默认情况下，没有限制，xtrabackup尽可能快地读取和写入数据。如果对I / O操作设置了太严格的限制，备份可能非常慢，以至于它永远无法赶上InnoDB正在编写的事务日志，因此备份可能永远不会完成。使用xtrabackup脚本备份xtrabackup工具有几个功能，可以让脚本在执行相关任务时对其进行控制。innobackupex脚本就是一个例子，但是xtrabackup也可以使用自己的命令行脚本轻松控制。复制后挂起在备份模式下，xtrabackup通常在后台线程中复制日志文件，在前台线程中复制数据文件，然后停止日志复制线程并完成。如果你使用--sus-pend-at-end选项，而不是停止日志线程并完成，xtrabackup继续复制日志文件，并在目标目录中创建一个名为xtrabackup_suspended的文件。只要该文件存在，xtrabackup将继续观察日志文件并将其复制到目标目录中的xtrabackup_log文件中。删除文件后，xtrabackup将完成复制日志文件并退出。此功能对于将InnoDB数据备份与其他操作进行协调非常有用。也许最明显的是复制表定义（.frm文件）以便可以恢复备份。您可以在后台启动xtrabackup，等待创建xtrabackup_suspended文件，然后复制完成备份所需的任何其他文件。这正是innobackupex工具所做的（它还复制MyISAM数据和其他文件）。生成元数据备份包含恢复备份所需的所有信息是个好主意。xtrabackup工具可以打印出恢复数据和日志文件所需的my.cnf文件的内容。如果添加--print-param选项，它将打印出如下内容：＃此MySQL选项文件由XtraBackup生成。[mysqld] datadir = / data / mysql / innodb_data_home_dir = / data / innodb / innodb_data_file_path = ibdata1：10M：autoextend innodb_log_group_home_dir = / data / innodb-logs /您可以将此输出重定向到备份目标目录中的文件。同意源目录它' 可能存在默认文件或其他因素可能导致xtrabackup备份来自不同于您预期的位置的数据。为了防止这种情况，您可以使用--print-param询问它将从何处复制数据。您可以使用输出来确保xtrabackup和您的脚本正在处理相同的数据集。日志流您可以指示xtrabackup省略复制数据文件，只需使用--log-stream将日志文件流式传输到其标准输出。这会自动添加--suspend-at-end选项。然后，您的脚本可以通过将日志文件传输到SSH连接并使用rsync或xbstream二进制工具将数据文件复制到另一台服务器来执行流式远程备份等任务。分析表统计信息xtrabackup二进制文件可以以只读模式分析InnoDB数据文件，以提供有关它们的统计信息。为此，您应该使用--stats选项。您可以将它与--tables选项结合使用，以限制要检查的文件。它还使用--use-memory选项。您可以在正在运行的服务器上执行分析，由于在分析期间更改了数据，因此可能会出现错误。或者，您可以分析数据库的备份副本。无论哪种方式，要使用统计功能，您都需要数据库的干净副本，包括正确大小的日志文件，因此您需要使用--prepare执行两次才能在备份中使用此功能。在备份上运行的结果可能如下所示：你应该使用--stats选项。您可以将它与--tables选项结合使用，以限制要检查的文件。它还使用--use-memory选项。您可以在正在运行的服务器上执行分析，由于在分析期间更改了数据，因此可能会出现错误。或者，您可以分析数据库的备份副本。无论哪种方式，要使用统计功能，您都需要数据库的干净副本，包括正确大小的日志文件，因此您需要使用--prepare执行两次才能在备份中使用此功能。在备份上运行的结果可能如下所示：你应该使用--stats选项。您可以将它与--tables选项结合使用，以限制要检查的文件。它还使用--use-memory选项。您可以在正在运行的服务器上执行分析，由于在分析期间更改了数据，因此可能会出现错误。或者，您可以分析数据库的备份副本。无论哪种方式，要使用统计功能，您都需要数据库的干净副本，包括正确大小的日志文件，因此您需要使用--prepare执行两次才能在备份中使用此功能。在备份上运行的结果可能如下所示：您可以在正在运行的服务器上执行分析，由于在分析期间更改了数据，因此可能会出现错误。或者，您可以分析数据库的备份副本。无论哪种方式，要使用统计功能，您都需要数据库的干净副本，包括正确大小的日志文件，因此您需要使用--prepare执行两次才能在备份中使用此功能。在备份上运行的结果可能如下所示：您可以在正在运行的服务器上执行分析，由于在分析期间更改了数据，因此可能会出现错误。或者，您可以分析数据库的备份副本。无论哪种方式，要使用统计信息功能，您都需要数据库的干净副本，包括正确大小的日志文件，因此您需要使用--prepare执行两次才能在备份上使用此功能。在备份上运行的结果可能如下所示：因此，您需要使用--prepare执行两次才能在备份中使用此功能。在备份上运行的结果可能如下所示：因此，您需要使用--prepare执行两次才能在备份中使用此功能。在备份上运行的结果可能如下所示： table：test / table1，index：PRIMARY，space id：12，root page 3估计字典统计：key vals：25265338，leaf pages 497839，size pages 498304 real statistics：level 2 pages：pages = 1，data = 5395 bytes ，data / pages = 32％level 1 pages：pages = 415，data = 6471907 bytes，data / pages = 95％leaf pages：recs = 25958413，pages = 497839，data = 7492026403 bytes，data / pages = 91％this can解释如下：·第一行只显示表和索引名称及其内部标识符。如果您看到名为GEN_CLUST_INDEX的索引，即表的聚簇索引，则会自动创建，因为您没有显式创建PRIMARY KEY。·字典信息中的估计统计信息类似于通过InnoDB内部的ANALYZE TABLE收集的数据，以存储为估计的基数统计并传递给查询优化器。·真实的统计信息是扫描数据页面和计算索引的准确信息的结果。· 水平pages：output表示该行显示索引树中该级别页面的信息。更大是，它与叶子页面的距离越远，它们是0级。第一行是根页面。·叶页输出当然会显示叶页。这是表的数据存储位置。·外部页面：输出（未显示）显示大型外部页面，这些页面保存的值太长而无法容纳在行本身中，例如长BLOB和TEXT值。·recs是叶页中的实际记录数（行数）。·页面是页数。·数据是页面中数据的总大小（以字节为单位）。·数据/页面计算为（data /（pages * PAGE_SIZE））* 100％。由于为页眉和页脚保留了空间，它永远不会达到100％。更详细的示例发布为MySQL性能博客帖子。格式化输出的脚本以下脚本可用于汇总和制表统计信息的输出：tabulate-xtrabackup-stats.pl＃！/ usr / bin / env perl use strict; 使用警告FATAL =>'all'; 我的$ script_version =“0.1”; 我的$ PG_SIZE = 16_384; #InnoDB默认为16k页，如果需要可以更改。我的（$ cur_idx，$ cur_tbl）; 我的（％idx_stats，％tbl_stats）; 我的（$ max_tbl_len，$ max_idx_len）=（0,0）; while（my $ line = <>）{if（my（$ t，$ i）= $ line = ~m / table：（。*），index：（。*），space id：/）{$ t = 〜s！/！。！; $ cur_tbl = $ t; $ cur_idx = $ i; if（length（$ i）> $ max_idx_len）{$ max_idx_len = length（$ i）; } if（length（$ t）> $ max_tbl_len）{$ max_tbl_len = length（$ t）; elsif（my（$ kv，$ lp，$ sp）= $ line = ~m / key vals：（\ d +），\ D *（\ d +），\ D *（\ d +）/）{@ { $ idx_stats {$ cur_tbl} - > {$ cur_idx}} {qw（est_kv \ test_lp \ test_sp）} =（$ kv，$ lp，$ sp）; $ tbl_stats {$ cur_tbl} - > {est_kv} + = $ kv; $ tbl_stats {$ cur_tbl} - > {est_lp} + = $ lp; $ tbl_stats {$ cur_tbl} - > {est_sp} + = $ sp; } elsif（my（$ l，$ pages，$ bytes）= $ line = ~m /（?: level（\ d +）| leaf）pages：。* pages =（\ d +），data =（\ d +）bytes /）{$ l || = 0; $ idx_stats {$ cur_tbl} - > {$ cur_idx} - > {real_pages} + = $ pages; $ idx_stats {$ cur_tbl} - > {$ cur_idx} - > {real_bytes} + = $ bytes; $ tbl_stats {$ cur_tbl} - > {real_pages} + = $ pages; $ tbl_stats {$ cur_tbl} - > {real_bytes} + = $ bytes; 我的$ hdr_fmt =“％$ {max_tbl_len} s％$ {max_idx_len} s％9s％10s％10s \ n”; 我的@headers = qw（TABLE INDEX TOT_PAGES FREE_PAGES PCT_FULL）; printf $ hdr_fmt，@ headers; 我的$ row_fmt =“％$ {max_tbl_len} s％$ {max_idx_len} s％9d％10d％9.1f %% \ n”; foreach my $ t（排序键％tbl_stats）{my $ tbl = $ tbl_stats {$ t}; printf $ row_fmt，$ t，“”，$ tbl - > {est_sp}，$ tbl - > {est_sp} - $ tbl - > {real_pages}，$ tbl - > {real_bytes} /（$ tbl - > {real_pages} * $ PG_SIZE）* 100; foreach my $ i（排序键％{$ idx_stats {$ t}}）{my $ idx = $ idx_stats {$ t} - > {$ i}; printf $ row_fmt，$ t，$ i，$ idx - > {est_sp}，$ idx - > {est_sp} - $ idx - > {real_pages}，$ idx - > {real_bytes} /（$ idx - > {real_pages} * $ PG_SIZE）* 100; 示例脚本输出上述Perl脚本的输出，当针对前面提到的博客文章中显示的示例运行时，将显示如下：表索引TOT_PAGES FREE_PAGES PCT_FULL art.link_out104 832383 38561 86.8％art.link_out104 PRIMARY 498304 49 91.9 ％art.link_out104 domain_id 49600 6230 76.9％艺术。link_out104 domain_id_2 26495 3339 89.1％art.link_out104 from_message_id 28160 142 96.3％art.link_out104 from_site_id 38848 4874 79.4％art.link_out104 revert_domain 153984 19276 71.4％art.link_out104 site_message 36992 4651 83.4％列是表和索引，后跟总数该索引中的页数，实际未被数据占用的页数，以及实际数据的字节数占实际数据页总大小的百分比。上面输出中的第一行（INDEX列为空）是整个表的摘要。使用二进制日志xtrabackup二进制文件集成了InnoDB在其事务日志中存储的有关已提交事务的相应二进制日志位置的信息。这使它能够打印出备份所对应的二进制日志位置，因此您可以使用它来设置新的复制从站或执行时间点恢复。查找二进制日志位置准备好备份后，您可以找到与备份对应的二进制日志位置。这可以通过使用--prepare运行xtra-backup或使用--apply-log选项运行innobackupex来完成。如果备份来自启用了二进制日志记录的服务器，则xtrabackup将在目标目录中创建名为xtrabackup_binlog_info的文件。此文件包含二进制日志文件名和准备好的备份对应的二进制日志中的确切点的位置。您还将在准备阶段看到类似于以下内容的输出：InnoDB：上一个MySQL binlog文件位置0 3252710，文件名./mysql-bin.000001 ... snip ... [notice（again）]如果使用二进制文件记录并且不使用任何组提交的黑客，二进制日志位置似乎是：InnoDB：上一个MySQL binlog文件位置0 3252710，文件名./mysql-bin.000001此输出也可以在xtrabackup_binlog_pos_innodb文件中找到，但只有当XtraDB或InnoDB用作存储引擎时，它才是正确的。如果使用其他存储引擎（即MyISAM），您应该使用xtrabackup_binlog_info文件来检索位置。有关黑客组提交的消息是指在Percona Server中早期实现模拟组提交。时间点恢复要从xtrabackup备份执行时间点恢复，您应准备并恢复备份，然后从xtrabackup_binlog_info文件中显示的点重放二进制日志。这里有一个更详细的程序（使用innobackupex）。设置新的复制从站要设置新的副本，应准备备份，并将其还原到新复制从站的数据目录。然后在你的CHANGE MASTER TO命令中，使用xtrabackup_binlog_info文件中显示的二进制日志文件名和位置开始复制。更详细的过程可在../howtos/setting_up_replica中找到。还原单个表在5.6之前的服务器版本中，即使使用innodb_file_per_table，也无法通过复制文件在服务器之间复制表。但是，使用Percona XtraBackup，您可以从任何InnoDB数据库导出单个表，并使用XtraDB或MySQL 5.6将它们导入Percona Server。（源不必是XtraDB或MySQL 5.6，但目标确实如此。）这仅适用于单个.ibd文件，并且无法导出未包含在其自己的.ibd文件中的表。让我们看看如何导出和导入下表：CREATE TABLE export_test（int（11）DEFAULT NULL）ENGINE = InnoDB DEFAULT CHARSET = latin1; 注意：如果您运行的是早于5.5.10-20.1的Percona Server版本，则应使用变量innodb_expand_import而不是innodb_import_table_from_xtrabackup。导出表这个表应该是以innodb_file_per_table模式创建的，所以在像往常一样使用xtrabackup -backup进行备份之后，.ibd文件应该存在于目标目录中：$ find / data / backups / mysql / -name export_test。 * /data/backups/mysql/test/export_test.ibd准备备份时，将额外参数xtrabackup --export添加到命令中。这是一个例子：$ xtrabackup --prepare --export --target -dir = / data / backups / mysql /注意：如果您正在尝试恢复加密的InnoDB表空间表，您还需要指定密钥环文件：xtrabackup --prepare --export --target -dir = / tmp / table \ --keyring-file-data = / var / lib / mysql-keyring / keyring现在你应该在目标目录中看到一个.exp文件：$ find / data / backups / mysql / -name export_test。* /data/backups/mysql/test/export_test.exp /data/backups/mysql/test/export_test.ibd /data/backups/mysql/test/export_test.cfg这三个文件都是您需要将表导入到运行带有XtraDB或MySQL 5.7的Percona Server的服务器中。如果服务器正在使用InnoDB表空间加密。为加密表列出cfp文件。注意：MySQL使用.cfg文件，该文件包含特殊格式的InnoDB字典转储。此格式与.exp`不同，后者在XtraDB中用于同一目的。严格地说，将表空间导入MySQL 5.7或Percona Server 5.7不需要.cfg`文件。即使表空间来自其他服务器，也会成功导入表空间，但如果相应的.cfg文件存在于同一目录中，InnoDB将进行模式验证。导入表在运行Percona Server且启用了XtraDB和innodb_import_table_from_xtrabackup选项的目标服务器上，或者MySQL 5.6，创建一个具有相同结构的表，然后执行以下步骤：·执行ALTER TABLE test.export_test DISCARD TABLESPACE; ·如果看到以下消息，则必须启用inn- odb_file_per_table并再次创建表：ERROR 1030（HY000）：从存储引擎获得错误-1·将导出的文件复制到目标服务器数据目录的test /子目录·执行ALTER TABLE test.export_test IMPORT TABLESPACE; 现在应该导入该表，您应该能够从中进行SELECT并查看导入的数据。注意：在导入的表上运行ANALYZE TABLE之前，导入的表空间的持久统计信息将为空。它们将为空，因为它们存储在系统表mysql中。innodb_ta- ble_stats和mysql.innodb_index_stats，在导入过程中服务器不会更新它们。这是由于上游错误＃72368。LRU转储备份此功能通过在重新启动后从ib_lru_dump文件恢复缓冲池状态来缩短预热时间。Percona XtraBackup发现ib_lru_dump并自动备份。[image]如果在my.cnf缓冲池中启用了缓冲区恢复选项，则备份恢复后将处于暖启动状态。要启用此设置，Percona Server 5.5中的变量innodb_buffer_pool_restore_at_startup = 1或Percona Server 5.1中的innodb_auto_lru_dump = 1。实现实现细节此页面包含有关xtrabackup工具操作的各种内部方面的说明。文件权限xtrabackup以读写模式打开源数据文件，但它不会修改文件。这意味着您必须以具有写入数据文件权限的用户身份运行xtrabackup。在读写模式下打开文件的原因是xtrabackup使用嵌入式Inn-oDB库来打开和读取文件，InnoDB以读写模式打开它们，因为它通常假定它将写入它们。调整OS缓冲区由于xtrabackup从文件系统读取大量数据，因此它尽可能使用posix_fadvise（）来指示操作系统不要尝试缓存从磁盘读取的块。没有这个提示，操作系统会更喜欢缓存块，假设xtrabackup可能再次需要它们，情况并非如此。缓存此类大型文件会对操作系统的虚拟内存造成压力，并导致其他进程（如数据库服务器）被换出。xtrabackup工具通过源文件和目标文件的以下提示来避免这种情况：posix_fadvise（file，0,0，POSIX_FADV_DONTNEED）此外，xtrabackup要求操作系统对源文件执行更积极的预读优化：posix_fadvise（ file，0,0，POSIX_FADV_SEQUENTIAL）复制数据文件将数据文件复制到目标目录时，xtrabackup一次读写1MB数据。这是不可配置的。复制日志文件时 xtrabackup一次读取和写入512个字节。这也是不可能配置的，并且匹配InnoDB的行为（Percona Server中存在解决方法，因为它可以选择调整XtraDB的inn- odb_log_block_size，在这种情况下Percona XtraBackup将匹配调优）。读取文件后，xtrabackup一次遍历1MB缓冲区，并使用Inn- oDB的buf_page_is_corrupted（）函数检查每页上的页面损坏情况。如果页面已损坏，则会为每个页面重新读取并重试最多10次。它会在doublewrite缓冲区上跳过此检查。xtrabackup退出代码当没有错误发生时，xtrabackup二进制文件在备份后以传统的成功值0退出。如果在备份期间发生错误，则退出值为1.在某些情况下，由于MySQL库中包含命令行选项代码，退出值可能不是0或1。例如，未知的命令行选项将导致退出代码为255.参考xtrabackup选项参考此页面记录了xtrabackup二进制文件的所有命令行选项。选项--apply-log-only此选项仅在准备备份时导致执行重做阶段。这对增量备份非常重要。--backup进行备份并将其放在xtrabackup --target-dir中。请参阅创建备份。--binlog-info此选项控制Percona XtraBackup应如何检索与备份对应的服务器二进制日志坐标。可能的值为OFF，ON，LOCKLESS和AUTO。有关详细信息，请参阅Percona XtraBackup lockless_bin-log手册页。--close-files不要保持文件打开。当xtrabackup打开表空间时，它通常不会关闭其文件句柄以正确处理DDL操作。但是，如果表空间的数量非常大且无法满足任何限制，则可以选择在不再访问文件句柄时关闭它们。Percona XtraBackup可以在启用此选项的情况下生成不一致的备份。使用风险由您自己承担。--compact通过跳过辅助索引页面来创建一个紧凑的备份。--compress此选项告诉xtrabackup使用指定的压缩算法压缩所有输出数据，包括事务日志文件和元数据文件。目前唯一支持的算法是quicklz。生成的文件具有qpress存档格式，即xtrabackup生成的每个* .qp文件本质上都是单文件qpress存档，可以通过qpress文件存档提取和解压缩。--compress-chunk-size =＃压缩线程的工作缓冲区大小（以字节为单位）。默认值为64K。--compress-threads =＃此选项指定xtra-backup用于并行数据压缩的工作线程数。此选项默认为1.并行压缩（：选项：`xtrabackup --compress-threads`）可与并行文件复制一起使用（xtrabackup --parallel）。例如， - parallel = 4 --compress --com- press-threads = 2将创建4个I / O线程，这些线程将读取数据并将其传递给2个压缩线程。--copy-back将先前制作的备份中的所有文件从备份目录复制到其原始位置。除非指定了xtrabackup --force-non-empty-directo- ries选项，否则此选项不会复制现有文件。--create-ib-logfile当前未实现此选项。要创建InnoDB日志文件，您必须准备两次备份。--databases =＃此选项指定应备份的数据库和表的列表。该选项接受“databasename1 [.table_name1] databasename2 [.table_name2] ...”形式的列表。--databases-file =＃此选项指定包含应备份的数据库和表列表的文件的路径。该文件可以包含表单databasename1 [的列表元素。ta-ble_name1]，每行一个元素。--dadadir = DIRECTORY备份的源目录。这应该与MySQL服务器的datadir相同，因此如果存在，应该从my.cnf中读取; 否则你必须在命令行上指定它。--decompress在先前使用xtrabackup --compress选项进行的备份中解压缩扩展名为.qp的所有文件。xtrabackup --parallel选项将允许同时解密多个文件。为了解压缩，必须在路径中安装和访问qpress实用程序。Percona XtraBackup不会自动删除压缩文件。为了清理备份目录，用户应使用xtrabackup --remove-original选项。--decrypt = ENCRYPTION-ALGORITHM在先前使用xtrabackup --encrypt选项进行的备份中解密具有.xbcrypt扩展名的所有文件。xtrabackup --parallel选项将允许同时解密多个文件。Percona XtraBackup不会自动删除加密文件。为了清理备份目录，用户应使用xtrabackup --remove-original选项。--defaults-extra-file = [MY.CNF]读取全局文件后读取此文件。必须作为命令行中的第一个选项。--defaults文件= [MY。CNF]仅读取给定文件中的默认选项。必须作为命令行中的第一个选项。必须是真实的文件; 它不能成为一种象征性的联系。--defaults-group = GROUP-NAME此选项用于设置应从配置文件中读取的组。如果您使用xtrabackup -defaults-group选项，innobackupex将使用此选项。mysqld_multi部署需要它。--encrypt = ENCRYPTION_ALGORITHM此选项指示xtrabackup使用ENCRYP-TION_ALGORITHM中指定的算法加密InnoDB数据文件的备份副本。它直接传递给xtrabackup子进程。有关更多详细信息，请参阅xtrabackup文档。--encrypt-key = ENCRYPTION_KEY当使用xtrabackup --encrypt选项时，此选项指示xtrabackup使用给定的ENCRYPTION_KEY。它直接传递给xtrabackup子进程。有关更多详细信息，请参阅xtrabackup文档。--encrypt-key-file = ENCRYPTION_KEY_FILE当使用xtrabackup --encrypt选项时，此选项指示xtrabackup使用存储在给定ENCRYPTION_KEY_FILE中的加密密钥。它直接传递给xtra-backup子进程。有关更多详细信息，请参阅xtrabackup文档。--encrypt-threads =＃此选项指定将用于并行加密的工作线程数。它直接传递给xtra-backup子进程。有关更多详细信息，请参阅xtrabackup文档。--encrypt-chunk-size =＃此选项指定每个加密线程的内部工作缓冲区的大小（以字节为单位）。它直接传递给xtrabackup子进程。有关更多详细信息，请参阅xtrabackup文档。--export创建导出表所需的文件。请参阅恢复个别表格。--extra-lsndir = DIRECTORY（for --backup）：在此目录中保存xtrabackup_checkpoints文件的额外副本。--force-non-empty-directories当指定时，它会：option`xtrabackup --copy-back`和xtrabackup --move-back选项将文件传输到非空目录。不会覆盖现有文件。如果需要从备份目录复制/移动的文件已存在于目标目录中，则它仍将失败并显示错误。--ftwrl-wait-timeout = SECONDS此选项指定xtrabackup在运行之前应等待阻止FLUSH TABLES WITH READ LOCK的查询的时间（以秒为单位）。如果超时到期时仍有此类查询，xtrabackup以错误终止。默认值为0，在这种情况下，它不会等待查询完成并立即启动FLUSH TABLES WITH READ LOCK。如果支持（Percona Server 5.6+），xtrabackup将自动使用备份锁作为FLUSH TABLES WITH READ LOCK的轻量级替代方案来复制非InnoDB数据，以避免阻止修改InnoDB表的DML查询。--ftwrl-wait-threshold = SECONDS此选项指定查询运行时阈值，xtrabackup使用该阈值来检测具有非零值xtrabackup -ftwrl-wait-timeout的长时间运行的查询。在存在长时间运行的查询之前，不会启动具有READ LOCK的FLUSH表。如果xtrabackup --ftwrl-wait-timeout为0，则此选项无效。默认值为60秒。如果支持（Percona Server 5.6+），xtrabackup将自动使用备份锁作为FLUSH TABLES WITH READ LOCK的轻量级替代方案来复制非InnoDB数据，以避免阻止修改InnoDB表的DML查询。--ftwrl-wait-query-type = all | update此选项指定在xtrabackup发出全局锁之前允许完成哪些类型的查询。默认是全部。--galera-info此选项创建xtrabackup_galera_info文件，该文件包含备份时的本地节点状态。在执行Percona XtraDB Cluster的备份时应使用选项。使用备份锁创建备份时，它不起作用。--incremental-basedir = DIRECTORY创建增量备份时，这是包含完整备份的目录，该备份是增量备份的基础数据集。--incremental-dir = DIRECTORY准备增量备份时，这是增量备份与完整备份组合的目录，以进行新的完整备份。--incremental-force-scan创建增量备份时，即使完整更改的页面位图数据可用，也强制对正在备份的实例中的数据页进行完全扫描。--incremental-lsn = LSN创建增量备份时，可以指定日志序列号（LSN），而不是指定xtrabackup --incre- mental-basedir。对于在5.1及更高版本中创建的数据库，请将LSN指定为单个64位整数。注意：如果指定了错误的LSN值（Percona XtraBackup无法检测到的用户错误），则备份将无法使用。小心！--innodb-log-arch-dir = DIRECTORY此选项用于指定包含存档日志的目录。它只能与xtrabackup --prepare选项一起使用。--innodb-miscellaneous有一大组InnoDB选项通常从my.cnf配置文件中读取，因此xtrabackup以与当前服务器相同的配置启动其嵌入式InnoDB。您通常不需要明确指定这些。这些选项与InnoDB或XtraDB中的选项具有相同的行为。它们如下：--innodb-log-file-size --innodb-log-group-home-dir --innodb-max-dirty-pages-pct --innodb-open-files --innodb-page-size --innodb-read -io-threads --innodb-write-io-threads --keyring-file-data = FILENAME密钥环文件的路径。--log-copy-interval =＃此选项指定日志复制线程完成的检查之间的时间间隔（以毫秒为单位）（默认值为1秒）。--move-back将先前制作的备份中的所有文件从备份目录移动到其原始位置。由于此选项会删除备份文件，因此必须谨慎使用。--no-defaults Don' t从任何选项文件中读取默认选项。必须作为命令行中的第一个选项。--parallel =＃此选项指定在创建备份时用于同时复制多个数据文件的线程数。默认值为1（即没有并发传输）。--password = PASSWORD此选项指定连接到数据库时要使用的密码。它接受一个字符串参数。有关详细信息，请参阅mysql --help。--prepare使xtrabackup对使用xtrabackup -backup创建的备份执行恢复，以便可以使用它。请参阅准备备份。--print-defaults打印程序参数列表并退出。必须作为命令行中的第一个选项。--print-param使xtrabackup打印出可用于将数据文件复制回原始位置的参数以恢复它们。请参阅脚本 - xtrabackup。--rebuild_indexes应用日志后重建InnoDB表中的二级索引。只对--prepare有效。--rebuild_threads =＃使用此线程数重建紧凑备份中的索引。仅对--prepare和--rebuild-indexes有效。--reencrypt换服务器-ID = --print-param使xtrabackup打印出可用于将数据文件复制回原始位置的参数以恢复它们。请参阅脚本 - xtrabackup。--rebuild_indexes应用日志后重建InnoDB表中的二级索引。只对--prepare有效。--rebuild_threads =＃使用此线程数重建紧凑备份中的索引。仅对--prepare和--rebuild-indexes有效。--reencrypt换服务器-ID = --print-param使xtrabackup打印出可用于将数据文件复制回原始位置的参数以恢复它们。请参阅脚本 - xtrabackup。--rebuild_indexes应用日志后重建InnoDB表中的二级索引。只对--prepare有效。--rebuild_threads =＃使用此线程数重建紧凑备份中的索引。仅对--prepare和--rebuild-indexes有效。--reencrypt换服务器-ID = --rebuild_threads =＃使用此线程数重建紧凑备份中的索引。仅对--prepare和--rebuild-indexes有效。--reencrypt换服务器-ID = --rebuild_threads =＃使用此线程数重建紧凑备份中的索引。仅对--prepare和--rebuild-indexes有效。--reencrypt换服务器-ID = 使用此选项可以使用与从中获取加密备份的server_id不同的server_id启动服务器实例，例如复制从属节点或galera节点。使用此选项时，作为准备步骤，xtrabackup将根据新的server_id生成具有ID的新主密钥，将其存储到密钥环文件中并重新加密表空间标头内的表空间密钥。应该为--prepare（最后一步）传递选项。--remove-original在Percona XtraBackup 2.4.6中实现，指定此选项将在解密和解压缩后删除.qp，.xbcrypt和.qp.xbcrypt文件。--safe-slave-backup指定时，xtrabackup将在运行FLUSH TABLES WITH READ LOCK之前停止从属SQL线程，并等待开始备份，直到SHOW STATUS中的Slave_open_temp_tables为零。如果没有打开的临时表，则会进行备份，否则将启动并停止SQL线程，直到没有打开的临时表为止。如果在xtrabackup --safe-slave-backup-timeout秒之后Slave_open_temp_tables没有变为零，则备份将失败。备份完成后，将重新启动从属SQL线程。实现此选项是为了处理复制临时表，而不是基于行的复制。--safe-slave-backup-timeout = SECONDS xtrabackup --safe-slave-backup应等待Slave_open_temp_tables变为零的秒数。默认为300秒。--secure-auth如果客户端使用旧的（4.1.1之前的）协议，则拒绝客户端连接到服务器。（默认情况下启用;使用--skip-secure-auth禁用。） - server-id =＃正在备份的服务器实例。--slave-info备份复制从属服务器时，此选项很有用。它打印主服务器的二进制日志位置。它还将此信息作为CHANGE MASTER命令写入xtrabackup_slave_info文件。可以通过在此备份上启动从属服务器并发出CHANGE MASTER命令并将二进制日志位置保存在xtrabackup_slave_info文件中来设置此主站的新从站。--ssl启用安全连接。更多信息可以在--ssl MySQL服务器文档中找到。--ssl-ca包含受信任SSL CA列表的文件路径。更多信息可以在--ssl-ca MySQL服务器文档中找到。--ssl-capath包含PEM格式的受信任SSL CA证书的目录路径。更多信息可以在--ssl-capath MySQL服务器文档中找到。--ssl-cert包含PEM格式的X509证书的文件的路径。更多信息可以在--ssl-cert MySQL服务器文档中找到。--ssl-cipher用于连接加密的允许密码列表。更多信息可以在--ssl-cipher MySQL服务器文档中找到。--ssl-crl包含证书吊销列表的文件的路径。更多信息可以在--ssl-crl MySQL服务器文档中找到。--ssl-crlpath包含证书吊销列表文件的目录路径。更多信息可以在--ssl-crlpath MySQL服务器文档中找到。--ssl-key包含PEM格式的X509密钥的文件路径。更多信息可以在--ssl-key MySQL服务器文档中找到。--ssl-mode与服务器连接的安全状态。更多信息可以在--ssl-mode MySQL服务器文档中找到。--ssl-verify-server-cert验证服务器证书公共名称值是否与连接到服务器时使用的主机名相对应。更多信息可以在--ssl-verify-server-cert MySQL服务器文档中找到。--stats使xtrabackup扫描指定的数据文件并打印出索引统计信息。--stream = name将所有备份文件以指定格式流式传输到标准输出。目前支持的格式是xbstream和tar。--tables = name一个正则表达式，与databasename.tablename格式的完整表名匹配。如果名称匹配，则备份表。查看部分备份。--tables-file = name每行包含一个表名的文件，格式为database-name.tablename。备份将仅限于指定的表。请参阅脚本 - xtrabackup。--target-dir = DIRECTORY此选项指定备份的目标目录。如果该目录不存在，则xtrabackup会创建它。如果目录确实存在且为空，则xtrabackup将成功。但是，xtrabackup不会覆盖现有文件; 它将因操作系统错误17而失败，文件存在。如果此选项是相对路径，则将其解释为相对于执行xtrabackup的当前工作目录。--throttle =＃此选项将xtrabackup --backup限制为每秒指定数量的读取/写入操作对。请参阅限制备份。--tmpdir = name当使用xtrabackup --print-param时，除了打印出正确的tmpdir参数外，此选项当前不用于任何内容。--to-archived-lsn = LSN此选项用于指定在准备备份时应将日志应用到的LSN。它只能与xtrabackup --prepare选项一起使用。--use-memory =＃此选项会影响使用xtrabackup --prepare准备备份或使用xtrabackup --stats分析统计信息所分配的内存量。其目的与innodb_buf- fer_pool_size类似。它与Oracle的InnoDB热备份工具中的类似命名选项不同。默认值为100MB，如果您有足够的可用内存，1GB到2GB是一个很好的建议值。支持倍数提供单位（例如1MB，1M，1GB，1G）。--user = USERNAME此选项指定连接到服务器时使用的MySQL用户名，如果' 不是当前用户。该选项接受字符串参数。有关详细信息，请参阅mysql --help。--version此选项打印xtrabackup版本并退出。作者Percona LLC和/或其附属公司COPYRIGHT 2009-2017，Percona LLC和/或其附属公司2.4.6 Apr 17,2017 XTRABACKUP（1）